
Cloud.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000120  00800100  000011ac  00001240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  00800220  00800220  00001360  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001360  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001390  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002f0  00000000  00000000  000013d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004ca2  00000000  00000000  000016c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014bb  00000000  00000000  00006362  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c15  00000000  00000000  0000781d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008dc  00000000  00000000  00009434  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f6a  00000000  00000000  00009d10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003548  00000000  00000000  0000ac7a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000310  00000000  00000000  0000e1c2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4a 00 	jmp	0x94	; 0x94 <__dtors_end>
       4:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
       8:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
       c:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      10:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      14:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      18:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      1c:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      20:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      24:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      28:	0c 94 31 04 	jmp	0x862	; 0x862 <__vector_10>
      2c:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__vector_11>
      30:	0c 94 27 04 	jmp	0x84e	; 0x84e <__vector_12>
      34:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__vector_13>
      38:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      3c:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      40:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      44:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      48:	0c 94 ff 06 	jmp	0xdfe	; 0xdfe <__vector_18>
      4c:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      50:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      54:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      58:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      5c:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      60:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      64:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__bad_interrupt>
      68:	58 07       	cpc	r21, r24
      6a:	5a 07       	cpc	r21, r26
      6c:	5c 07       	cpc	r21, r28
      6e:	5e 07       	cpc	r21, r30
      70:	60 07       	cpc	r22, r16
      72:	62 07       	cpc	r22, r18
      74:	64 07       	cpc	r22, r20
      76:	66 07       	cpc	r22, r22
      78:	68 07       	cpc	r22, r24
      7a:	6a 07       	cpc	r22, r26
      7c:	6c 07       	cpc	r22, r28
      7e:	6e 07       	cpc	r22, r30
      80:	70 07       	cpc	r23, r16
      82:	72 07       	cpc	r23, r18
      84:	74 07       	cpc	r23, r20
      86:	76 07       	cpc	r23, r22
      88:	78 07       	cpc	r23, r24
      8a:	7a 07       	cpc	r23, r26

0000008c <__ctors_start>:
      8c:	3b 04       	cpc	r3, r11
      8e:	23 07       	cpc	r18, r19

00000090 <__ctors_end>:
      90:	40 04       	cpc	r4, r0
      92:	28 07       	cpc	r18, r24

00000094 <__dtors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d8 e0       	ldi	r29, 0x08	; 8
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	12 e0       	ldi	r17, 0x02	; 2
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	ec ea       	ldi	r30, 0xAC	; 172
      a8:	f1 e1       	ldi	r31, 0x11	; 17
      aa:	02 c0       	rjmp	.+4      	; 0xb0 <__do_copy_data+0x10>
      ac:	05 90       	lpm	r0, Z+
      ae:	0d 92       	st	X+, r0
      b0:	a0 32       	cpi	r26, 0x20	; 32
      b2:	b1 07       	cpc	r27, r17
      b4:	d9 f7       	brne	.-10     	; 0xac <__do_copy_data+0xc>

000000b6 <__do_clear_bss>:
      b6:	22 e0       	ldi	r18, 0x02	; 2
      b8:	a0 e2       	ldi	r26, 0x20	; 32
      ba:	b2 e0       	ldi	r27, 0x02	; 2
      bc:	01 c0       	rjmp	.+2      	; 0xc0 <.do_clear_bss_start>

000000be <.do_clear_bss_loop>:
      be:	1d 92       	st	X+, r1

000000c0 <.do_clear_bss_start>:
      c0:	ab 33       	cpi	r26, 0x3B	; 59
      c2:	b2 07       	cpc	r27, r18
      c4:	e1 f7       	brne	.-8      	; 0xbe <.do_clear_bss_loop>

000000c6 <__do_global_ctors>:
      c6:	10 e0       	ldi	r17, 0x00	; 0
      c8:	c8 e4       	ldi	r28, 0x48	; 72
      ca:	d0 e0       	ldi	r29, 0x00	; 0
      cc:	04 c0       	rjmp	.+8      	; 0xd6 <__do_global_ctors+0x10>
      ce:	21 97       	sbiw	r28, 0x01	; 1
      d0:	fe 01       	movw	r30, r28
      d2:	0e 94 a2 07 	call	0xf44	; 0xf44 <__tablejump2__>
      d6:	c6 34       	cpi	r28, 0x46	; 70
      d8:	d1 07       	cpc	r29, r17
      da:	c9 f7       	brne	.-14     	; 0xce <__do_global_ctors+0x8>
      dc:	0e 94 46 03 	call	0x68c	; 0x68c <main>
      e0:	0c 94 c9 08 	jmp	0x1192	; 0x1192 <__do_global_dtors>

000000e4 <__bad_interrupt>:
      e4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e8 <_ZN11ADC_klasikaC1Ev>:
// default constructor
ADC_klasika::ADC_klasika()
{
} //ADC_klasika
// default destructor
ADC_klasika::~ADC_klasika()
      e8:	08 95       	ret

000000ea <_ZN11ADC_klasika7Nas_ADCEhb>:
{
} //~ADC_klasika
void ADC_klasika::Nas_ADC(uint8_t hod, bool rezim){
	hod=hod&0x7;
	ADCSRA =0b10000000|hod; //  ADEN  
      ea:	67 70       	andi	r22, 0x07	; 7
      ec:	60 68       	ori	r22, 0x80	; 128
      ee:	60 93 7a 00 	sts	0x007A, r22	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	if(rezim) ADCSRA |=0x20;  // autotriger
      f2:	44 23       	and	r20, r20
      f4:	29 f0       	breq	.+10     	; 0x100 <_ZN11ADC_klasika7Nas_ADCEhb+0x16>
      f6:	ea e7       	ldi	r30, 0x7A	; 122
      f8:	f0 e0       	ldi	r31, 0x00	; 0
      fa:	80 81       	ld	r24, Z
      fc:	80 62       	ori	r24, 0x20	; 32
      fe:	80 83       	st	Z, r24
     100:	08 95       	ret

00000102 <_ZN11ADC_klasika9Nas_kanalEh>:
};
	
void ADC_klasika::Nas_kanal(uint8_t kan){
	kan=kan&0x07;
	ADMUX = 0b01000000|kan;	//AVCC
     102:	67 70       	andi	r22, 0x07	; 7
     104:	60 64       	ori	r22, 0x40	; 64
     106:	60 93 7c 00 	sts	0x007C, r22	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     10a:	08 95       	ret

0000010c <_ZN11ADC_klasika7Daj_ADCEv>:
};
int ADC_klasika::Daj_ADC(void){
	ADCSRA |= (1<<ADSC);		// start
     10c:	ea e7       	ldi	r30, 0x7A	; 122
     10e:	f0 e0       	ldi	r31, 0x00	; 0
     110:	80 81       	ld	r24, Z
     112:	80 64       	ori	r24, 0x40	; 64
     114:	80 83       	st	Z, r24
	while((ADCSRA & (1<<ADIF))!=(1<<ADIF)){}; //caka na koniec prvodu
     116:	80 81       	ld	r24, Z
     118:	84 ff       	sbrs	r24, 4
     11a:	fd cf       	rjmp	.-6      	; 0x116 <_ZN11ADC_klasika7Daj_ADCEv+0xa>
	int prev = ADCL;
     11c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
		prev |=ADCH<<8;
     120:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
		ADCSRA |=(1<<ADIF);   //alternativa k vynulovaniu ADIF
     124:	ea e7       	ldi	r30, 0x7A	; 122
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	90 81       	ld	r25, Z
     12a:	90 61       	ori	r25, 0x10	; 16
     12c:	90 83       	st	Z, r25
		return prev;
     12e:	90 e0       	ldi	r25, 0x00	; 0
	};
     130:	92 2b       	or	r25, r18
     132:	08 95       	ret

00000134 <_ZN6ClientC1Ev>:
Client::Client()
{
} //Client

// default destructor
Client::~Client()
     134:	0e 94 99 04 	call	0x932	; 0x932 <_ZN5UsartC1Ev>
     138:	08 95       	ret

0000013a <_ZN6Client10test_zhodyEhPKc>:
	this->write(kanal);
	hwcrlf;
	this->test_zhody2("OK\r\n");
};

bool Client::test_zhody(uint8_t max_cas, const char* data){
     13a:	cf 92       	push	r12
     13c:	df 92       	push	r13
     13e:	ef 92       	push	r14
     140:	ff 92       	push	r15
     142:	0f 93       	push	r16
     144:	1f 93       	push	r17
     146:	cf 93       	push	r28
     148:	7c 01       	movw	r14, r24
     14a:	6a 01       	movw	r12, r20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     14c:	8f e2       	ldi	r24, 0x2F	; 47
     14e:	95 e7       	ldi	r25, 0x75	; 117
     150:	01 97       	sbiw	r24, 0x01	; 1
     152:	f1 f7       	brne	.-4      	; 0x150 <_ZN6Client10test_zhodyEhPKc+0x16>
     154:	00 c0       	rjmp	.+0      	; 0x156 <_ZN6Client10test_zhodyEhPKc+0x1c>
     156:	00 00       	nop
	int8_t pocitadlo = 0;
     158:	c0 e0       	ldi	r28, 0x00	; 0
	_delay_ms(10);
	while((USART.available())==0){			//this->   ????
		_delay_ms(20);
		pocitadlo++;
		if(pocitadlo > max_cas){ this->Swrite(" TIMEOUT\r\n");
     15a:	06 2f       	mov	r16, r22
     15c:	10 e0       	ldi	r17, 0x00	; 0
};

bool Client::test_zhody(uint8_t max_cas, const char* data){
	int8_t pocitadlo = 0;
	_delay_ms(10);
	while((USART.available())==0){			//this->   ????
     15e:	82 e2       	ldi	r24, 0x22	; 34
     160:	92 e0       	ldi	r25, 0x02	; 2
     162:	0e 94 b0 04 	call	0x960	; 0x960 <_ZN5Usart9availableEv>
     166:	89 2b       	or	r24, r25
     168:	a9 f4       	brne	.+42     	; 0x194 <_ZN6Client10test_zhodyEhPKc+0x5a>
     16a:	8f e5       	ldi	r24, 0x5F	; 95
     16c:	9a ee       	ldi	r25, 0xEA	; 234
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <_ZN6Client10test_zhodyEhPKc+0x34>
     172:	00 c0       	rjmp	.+0      	; 0x174 <_ZN6Client10test_zhodyEhPKc+0x3a>
     174:	00 00       	nop
     176:	cf 5f       	subi	r28, 0xFF	; 255
		_delay_ms(20);
		pocitadlo++;
		if(pocitadlo > max_cas){ this->Swrite(" TIMEOUT\r\n");
     178:	8c 2f       	mov	r24, r28
     17a:	0c 2e       	mov	r0, r28
     17c:	00 0c       	add	r0, r0
     17e:	99 0b       	sbc	r25, r25
     180:	08 17       	cp	r16, r24
     182:	19 07       	cpc	r17, r25
     184:	64 f7       	brge	.-40     	; 0x15e <_ZN6Client10test_zhodyEhPKc+0x24>
     186:	6c e0       	ldi	r22, 0x0C	; 12
     188:	71 e0       	ldi	r23, 0x01	; 1
     18a:	c7 01       	movw	r24, r14
     18c:	0e 94 e5 05 	call	0xbca	; 0xbca <_ZN5Usart6SwriteEPKc>
		return false; } // break; prekrocil sa cas odozvy
     190:	c0 e0       	ldi	r28, 0x00	; 0
     192:	1e c0       	rjmp	.+60     	; 0x1d0 <_ZN6Client10test_zhodyEhPKc+0x96>
     194:	8f e5       	ldi	r24, 0x5F	; 95
     196:	9a ee       	ldi	r25, 0xEA	; 234
     198:	01 97       	sbiw	r24, 0x01	; 1
     19a:	f1 f7       	brne	.-4      	; 0x198 <_ZN6Client10test_zhodyEhPKc+0x5e>
     19c:	00 c0       	rjmp	.+0      	; 0x19e <_ZN6Client10test_zhodyEhPKc+0x64>
     19e:	00 00       	nop
	}
	_delay_ms(20);					// aby dokoncil citanie do buff
	
	if(USART.find(data,true)){ USART.clear(); this->Swrite(" OK\r\n");	//this->
     1a0:	41 e0       	ldi	r20, 0x01	; 1
     1a2:	b6 01       	movw	r22, r12
     1a4:	82 e2       	ldi	r24, 0x22	; 34
     1a6:	92 e0       	ldi	r25, 0x02	; 2
     1a8:	0e 94 78 06 	call	0xcf0	; 0xcf0 <_ZN5Usart4findEPKcb>
     1ac:	c8 2f       	mov	r28, r24
     1ae:	88 23       	and	r24, r24
     1b0:	51 f0       	breq	.+20     	; 0x1c6 <_ZN6Client10test_zhodyEhPKc+0x8c>
     1b2:	82 e2       	ldi	r24, 0x22	; 34
     1b4:	92 e0       	ldi	r25, 0x02	; 2
     1b6:	0e 94 b4 04 	call	0x968	; 0x968 <_ZN5Usart5clearEv>
     1ba:	67 e1       	ldi	r22, 0x17	; 23
     1bc:	71 e0       	ldi	r23, 0x01	; 1
     1be:	c7 01       	movw	r24, r14
     1c0:	0e 94 e5 05 	call	0xbca	; 0xbca <_ZN5Usart6SwriteEPKc>
		return true;
     1c4:	05 c0       	rjmp	.+10     	; 0x1d0 <_ZN6Client10test_zhodyEhPKc+0x96>
	}
	else {this->Swrite(" CHYBA\r\n");
     1c6:	6d e1       	ldi	r22, 0x1D	; 29
     1c8:	71 e0       	ldi	r23, 0x01	; 1
     1ca:	c7 01       	movw	r24, r14
     1cc:	0e 94 e5 05 	call	0xbca	; 0xbca <_ZN5Usart6SwriteEPKc>
		return false;
	};
	USART.clear();
	return true;
};
     1d0:	8c 2f       	mov	r24, r28
     1d2:	cf 91       	pop	r28
     1d4:	1f 91       	pop	r17
     1d6:	0f 91       	pop	r16
     1d8:	ff 90       	pop	r15
     1da:	ef 90       	pop	r14
     1dc:	df 90       	pop	r13
     1de:	cf 90       	pop	r12
     1e0:	08 95       	ret

000001e2 <_ZN6Client14nastav_klientaEPKcS1_>:
// default destructor
Client::~Client()
{
} //~Client

bool Client::nastav_klienta(const char* ssid, const char* pass ){				//char *meno, char*pass
     1e2:	ef 92       	push	r14
     1e4:	ff 92       	push	r15
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	cf 93       	push	r28
     1ec:	df 93       	push	r29
     1ee:	ec 01       	movw	r28, r24
     1f0:	7b 01       	movw	r14, r22
     1f2:	8a 01       	movw	r16, r20
	this->write("ATE0");hwcrlf;
     1f4:	66 e2       	ldi	r22, 0x26	; 38
     1f6:	71 e0       	ldi	r23, 0x01	; 1
     1f8:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
     1fc:	e0 ec       	ldi	r30, 0xC0	; 192
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	85 ff       	sbrs	r24, 5
     204:	fd cf       	rjmp	.-6      	; 0x200 <_ZN6Client14nastav_klientaEPKcS1_+0x1e>
     206:	8d e0       	ldi	r24, 0x0D	; 13
     208:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     20c:	e0 ec       	ldi	r30, 0xC0	; 192
     20e:	f0 e0       	ldi	r31, 0x00	; 0
     210:	80 81       	ld	r24, Z
     212:	85 ff       	sbrs	r24, 5
     214:	fd cf       	rjmp	.-6      	; 0x210 <_ZN6Client14nastav_klientaEPKcS1_+0x2e>
     216:	8a e0       	ldi	r24, 0x0A	; 10
     218:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	if(!(this->test_zhody(10,"OK\r\n"))) return false;   // timeout 0.2s
     21c:	48 e1       	ldi	r20, 0x18	; 24
     21e:	51 e0       	ldi	r21, 0x01	; 1
     220:	6a e0       	ldi	r22, 0x0A	; 10
     222:	ce 01       	movw	r24, r28
     224:	0e 94 9d 00 	call	0x13a	; 0x13a <_ZN6Client10test_zhodyEhPKc>
     228:	88 23       	and	r24, r24
     22a:	09 f4       	brne	.+2      	; 0x22e <_ZN6Client14nastav_klientaEPKcS1_+0x4c>
     22c:	bf c0       	rjmp	.+382    	; 0x3ac <_ZN6Client14nastav_klientaEPKcS1_+0x1ca>
     22e:	2f e7       	ldi	r18, 0x7F	; 127
     230:	39 ea       	ldi	r19, 0xA9	; 169
     232:	83 e0       	ldi	r24, 0x03	; 3
     234:	21 50       	subi	r18, 0x01	; 1
     236:	30 40       	sbci	r19, 0x00	; 0
     238:	80 40       	sbci	r24, 0x00	; 0
     23a:	e1 f7       	brne	.-8      	; 0x234 <_ZN6Client14nastav_klientaEPKcS1_+0x52>
     23c:	00 c0       	rjmp	.+0      	; 0x23e <_ZN6Client14nastav_klientaEPKcS1_+0x5c>
     23e:	00 00       	nop
	_delay_ms(100);
	
	this->write("AT"); hwcrlf;
     240:	6b e2       	ldi	r22, 0x2B	; 43
     242:	71 e0       	ldi	r23, 0x01	; 1
     244:	ce 01       	movw	r24, r28
     246:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
     24a:	e0 ec       	ldi	r30, 0xC0	; 192
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	85 ff       	sbrs	r24, 5
     252:	fd cf       	rjmp	.-6      	; 0x24e <_ZN6Client14nastav_klientaEPKcS1_+0x6c>
     254:	8d e0       	ldi	r24, 0x0D	; 13
     256:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     25a:	e0 ec       	ldi	r30, 0xC0	; 192
     25c:	f0 e0       	ldi	r31, 0x00	; 0
     25e:	80 81       	ld	r24, Z
     260:	85 ff       	sbrs	r24, 5
     262:	fd cf       	rjmp	.-6      	; 0x25e <_ZN6Client14nastav_klientaEPKcS1_+0x7c>
     264:	8a e0       	ldi	r24, 0x0A	; 10
     266:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	if(!(this->test_zhody(10,"OK\r\n"))) return false;   // timeout 0.2s
     26a:	48 e1       	ldi	r20, 0x18	; 24
     26c:	51 e0       	ldi	r21, 0x01	; 1
     26e:	6a e0       	ldi	r22, 0x0A	; 10
     270:	ce 01       	movw	r24, r28
     272:	0e 94 9d 00 	call	0x13a	; 0x13a <_ZN6Client10test_zhodyEhPKc>
     276:	88 23       	and	r24, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_ZN6Client14nastav_klientaEPKcS1_+0x9a>
     27a:	98 c0       	rjmp	.+304    	; 0x3ac <_ZN6Client14nastav_klientaEPKcS1_+0x1ca>
     27c:	9f e7       	ldi	r25, 0x7F	; 127
     27e:	29 ea       	ldi	r18, 0xA9	; 169
     280:	33 e0       	ldi	r19, 0x03	; 3
     282:	91 50       	subi	r25, 0x01	; 1
     284:	20 40       	sbci	r18, 0x00	; 0
     286:	30 40       	sbci	r19, 0x00	; 0
     288:	e1 f7       	brne	.-8      	; 0x282 <_ZN6Client14nastav_klientaEPKcS1_+0xa0>
     28a:	00 c0       	rjmp	.+0      	; 0x28c <_ZN6Client14nastav_klientaEPKcS1_+0xaa>
     28c:	00 00       	nop
	_delay_ms(100);
	
	this->write("AT+CWMODE_CUR=1");	hwcrlf;	//nastavenie rezimu STA
     28e:	6e e2       	ldi	r22, 0x2E	; 46
     290:	71 e0       	ldi	r23, 0x01	; 1
     292:	ce 01       	movw	r24, r28
     294:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
     298:	e0 ec       	ldi	r30, 0xC0	; 192
     29a:	f0 e0       	ldi	r31, 0x00	; 0
     29c:	80 81       	ld	r24, Z
     29e:	85 ff       	sbrs	r24, 5
     2a0:	fd cf       	rjmp	.-6      	; 0x29c <_ZN6Client14nastav_klientaEPKcS1_+0xba>
     2a2:	8d e0       	ldi	r24, 0x0D	; 13
     2a4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     2a8:	e0 ec       	ldi	r30, 0xC0	; 192
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	80 81       	ld	r24, Z
     2ae:	85 ff       	sbrs	r24, 5
     2b0:	fd cf       	rjmp	.-6      	; 0x2ac <_ZN6Client14nastav_klientaEPKcS1_+0xca>
     2b2:	8a e0       	ldi	r24, 0x0A	; 10
     2b4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	if(!(this->test_zhody(50,"OK\r\n"))) return false; // timeout 1s
     2b8:	48 e1       	ldi	r20, 0x18	; 24
     2ba:	51 e0       	ldi	r21, 0x01	; 1
     2bc:	62 e3       	ldi	r22, 0x32	; 50
     2be:	ce 01       	movw	r24, r28
     2c0:	0e 94 9d 00 	call	0x13a	; 0x13a <_ZN6Client10test_zhodyEhPKc>
     2c4:	88 23       	and	r24, r24
     2c6:	09 f4       	brne	.+2      	; 0x2ca <_ZN6Client14nastav_klientaEPKcS1_+0xe8>
     2c8:	71 c0       	rjmp	.+226    	; 0x3ac <_ZN6Client14nastav_klientaEPKcS1_+0x1ca>
     2ca:	8f e7       	ldi	r24, 0x7F	; 127
     2cc:	99 ea       	ldi	r25, 0xA9	; 169
     2ce:	23 e0       	ldi	r18, 0x03	; 3
     2d0:	81 50       	subi	r24, 0x01	; 1
     2d2:	90 40       	sbci	r25, 0x00	; 0
     2d4:	20 40       	sbci	r18, 0x00	; 0
     2d6:	e1 f7       	brne	.-8      	; 0x2d0 <_ZN6Client14nastav_klientaEPKcS1_+0xee>
     2d8:	00 c0       	rjmp	.+0      	; 0x2da <_ZN6Client14nastav_klientaEPKcS1_+0xf8>
     2da:	00 00       	nop
	_delay_ms(100);
	
	this->write("AT+CIPMUX=1");	hwcrlf;	//podpora viacerych spojeni
     2dc:	6e e3       	ldi	r22, 0x3E	; 62
     2de:	71 e0       	ldi	r23, 0x01	; 1
     2e0:	ce 01       	movw	r24, r28
     2e2:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
     2e6:	e0 ec       	ldi	r30, 0xC0	; 192
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	80 81       	ld	r24, Z
     2ec:	85 ff       	sbrs	r24, 5
     2ee:	fd cf       	rjmp	.-6      	; 0x2ea <_ZN6Client14nastav_klientaEPKcS1_+0x108>
     2f0:	8d e0       	ldi	r24, 0x0D	; 13
     2f2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     2f6:	e0 ec       	ldi	r30, 0xC0	; 192
     2f8:	f0 e0       	ldi	r31, 0x00	; 0
     2fa:	80 81       	ld	r24, Z
     2fc:	85 ff       	sbrs	r24, 5
     2fe:	fd cf       	rjmp	.-6      	; 0x2fa <_ZN6Client14nastav_klientaEPKcS1_+0x118>
     300:	8a e0       	ldi	r24, 0x0A	; 10
     302:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	if(!(this->test_zhody(50,"OK\r\n"))) return false; // timeout 1s
     306:	48 e1       	ldi	r20, 0x18	; 24
     308:	51 e0       	ldi	r21, 0x01	; 1
     30a:	62 e3       	ldi	r22, 0x32	; 50
     30c:	ce 01       	movw	r24, r28
     30e:	0e 94 9d 00 	call	0x13a	; 0x13a <_ZN6Client10test_zhodyEhPKc>
     312:	88 23       	and	r24, r24
     314:	09 f4       	brne	.+2      	; 0x318 <_ZN6Client14nastav_klientaEPKcS1_+0x136>
     316:	4a c0       	rjmp	.+148    	; 0x3ac <_ZN6Client14nastav_klientaEPKcS1_+0x1ca>
     318:	3f e7       	ldi	r19, 0x7F	; 127
     31a:	89 ea       	ldi	r24, 0xA9	; 169
     31c:	93 e0       	ldi	r25, 0x03	; 3
     31e:	31 50       	subi	r19, 0x01	; 1
     320:	80 40       	sbci	r24, 0x00	; 0
     322:	90 40       	sbci	r25, 0x00	; 0
     324:	e1 f7       	brne	.-8      	; 0x31e <_ZN6Client14nastav_klientaEPKcS1_+0x13c>
     326:	00 c0       	rjmp	.+0      	; 0x328 <_ZN6Client14nastav_klientaEPKcS1_+0x146>
     328:	00 00       	nop
	_delay_ms(100);
	
	this->write("AT+CWJAP_CUR=\"");
     32a:	6a e4       	ldi	r22, 0x4A	; 74
     32c:	71 e0       	ldi	r23, 0x01	; 1
     32e:	ce 01       	movw	r24, r28
     330:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write(ssid);
     334:	b7 01       	movw	r22, r14
     336:	ce 01       	movw	r24, r28
     338:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write("\",\"");
     33c:	69 e5       	ldi	r22, 0x59	; 89
     33e:	71 e0       	ldi	r23, 0x01	; 1
     340:	ce 01       	movw	r24, r28
     342:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write(pass);
     346:	b8 01       	movw	r22, r16
     348:	ce 01       	movw	r24, r28
     34a:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write("\"");hwcrlf;
     34e:	6b e5       	ldi	r22, 0x5B	; 91
     350:	71 e0       	ldi	r23, 0x01	; 1
     352:	ce 01       	movw	r24, r28
     354:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
     358:	e0 ec       	ldi	r30, 0xC0	; 192
     35a:	f0 e0       	ldi	r31, 0x00	; 0
     35c:	80 81       	ld	r24, Z
     35e:	85 ff       	sbrs	r24, 5
     360:	fd cf       	rjmp	.-6      	; 0x35c <_ZN6Client14nastav_klientaEPKcS1_+0x17a>
     362:	8d e0       	ldi	r24, 0x0D	; 13
     364:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     368:	e0 ec       	ldi	r30, 0xC0	; 192
     36a:	f0 e0       	ldi	r31, 0x00	; 0
     36c:	80 81       	ld	r24, Z
     36e:	85 ff       	sbrs	r24, 5
     370:	fd cf       	rjmp	.-6      	; 0x36c <_ZN6Client14nastav_klientaEPKcS1_+0x18a>
     372:	8a e0       	ldi	r24, 0x0A	; 10
     374:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     378:	2f ef       	ldi	r18, 0xFF	; 255
     37a:	3a e1       	ldi	r19, 0x1A	; 26
     37c:	87 eb       	ldi	r24, 0xB7	; 183
     37e:	21 50       	subi	r18, 0x01	; 1
     380:	30 40       	sbci	r19, 0x00	; 0
     382:	80 40       	sbci	r24, 0x00	; 0
     384:	e1 f7       	brne	.-8      	; 0x37e <_ZN6Client14nastav_klientaEPKcS1_+0x19c>
     386:	00 c0       	rjmp	.+0      	; 0x388 <_ZN6Client14nastav_klientaEPKcS1_+0x1a6>
     388:	00 00       	nop
	_delay_ms(5000);
	
	if(!(this->test_zhody(250,"OK\r\n"))) return false; // timeout 5s
     38a:	48 e1       	ldi	r20, 0x18	; 24
     38c:	51 e0       	ldi	r21, 0x01	; 1
     38e:	6a ef       	ldi	r22, 0xFA	; 250
     390:	ce 01       	movw	r24, r28
     392:	0e 94 9d 00 	call	0x13a	; 0x13a <_ZN6Client10test_zhodyEhPKc>
     396:	88 23       	and	r24, r24
     398:	49 f0       	breq	.+18     	; 0x3ac <_ZN6Client14nastav_klientaEPKcS1_+0x1ca>
     39a:	9f e7       	ldi	r25, 0x7F	; 127
     39c:	29 ea       	ldi	r18, 0xA9	; 169
     39e:	33 e0       	ldi	r19, 0x03	; 3
     3a0:	91 50       	subi	r25, 0x01	; 1
     3a2:	20 40       	sbci	r18, 0x00	; 0
     3a4:	30 40       	sbci	r19, 0x00	; 0
     3a6:	e1 f7       	brne	.-8      	; 0x3a0 <_ZN6Client14nastav_klientaEPKcS1_+0x1be>
     3a8:	00 c0       	rjmp	.+0      	; 0x3aa <_ZN6Client14nastav_klientaEPKcS1_+0x1c8>
     3aa:	00 00       	nop
	_delay_ms(100);
	return true;
};
     3ac:	df 91       	pop	r29
     3ae:	cf 91       	pop	r28
     3b0:	1f 91       	pop	r17
     3b2:	0f 91       	pop	r16
     3b4:	ff 90       	pop	r15
     3b6:	ef 90       	pop	r14
     3b8:	08 95       	ret

000003ba <_ZN6Client11test_zhody2EPKc>:
	USART.clear();
	return true;
};


bool Client::test_zhody2(const char* data){	//jednoduchy test zhody bez timeout
     3ba:	0f 93       	push	r16
     3bc:	1f 93       	push	r17
     3be:	cf 93       	push	r28
     3c0:	8b 01       	movw	r16, r22
     3c2:	ca ef       	ldi	r28, 0xFA	; 250
     3c4:	8f e2       	ldi	r24, 0x2F	; 47
     3c6:	95 e7       	ldi	r25, 0x75	; 117
     3c8:	01 97       	sbiw	r24, 0x01	; 1
     3ca:	f1 f7       	brne	.-4      	; 0x3c8 <_ZN6Client11test_zhody2EPKc+0xe>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <_ZN6Client11test_zhody2EPKc+0x14>
     3ce:	00 00       	nop
	for(uint8_t i=0;i<250;i++){
		_delay_ms(10);					// 10ms=100 prijatych znakov
		if((USART.available())>5)
     3d0:	82 e2       	ldi	r24, 0x22	; 34
     3d2:	92 e0       	ldi	r25, 0x02	; 2
     3d4:	0e 94 b0 04 	call	0x960	; 0x960 <_ZN5Usart9availableEv>
     3d8:	06 97       	sbiw	r24, 0x06	; 6
     3da:	40 f0       	brcs	.+16     	; 0x3ec <_ZN6Client11test_zhody2EPKc+0x32>
		if(USART.find(data,true))return true;
     3dc:	41 e0       	ldi	r20, 0x01	; 1
     3de:	b8 01       	movw	r22, r16
     3e0:	82 e2       	ldi	r24, 0x22	; 34
     3e2:	92 e0       	ldi	r25, 0x02	; 2
     3e4:	0e 94 78 06 	call	0xcf0	; 0xcf0 <_ZN5Usart4findEPKcb>
     3e8:	81 11       	cpse	r24, r1
     3ea:	03 c0       	rjmp	.+6      	; 0x3f2 <_ZN6Client11test_zhody2EPKc+0x38>
     3ec:	c1 50       	subi	r28, 0x01	; 1
	return true;
};


bool Client::test_zhody2(const char* data){	//jednoduchy test zhody bez timeout
	for(uint8_t i=0;i<250;i++){
     3ee:	51 f7       	brne	.-44     	; 0x3c4 <_ZN6Client11test_zhody2EPKc+0xa>
		_delay_ms(10);					// 10ms=100 prijatych znakov
		if((USART.available())>5)
		if(USART.find(data,true))return true;
	}
	return false;
     3f0:	80 e0       	ldi	r24, 0x00	; 0
};
     3f2:	cf 91       	pop	r28
     3f4:	1f 91       	pop	r17
     3f6:	0f 91       	pop	r16
     3f8:	08 95       	ret

000003fa <_ZN6Client14zatvor_spojeneEh>:
	zatvor_spojene(kanal);		// zatvorim spojenie
	USART.clear();
	return true;	
};

void Client::zatvor_spojene(uint8_t kanal){
     3fa:	1f 93       	push	r17
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	ec 01       	movw	r28, r24
     402:	16 2f       	mov	r17, r22
	this->write("AT+CIPCLOSE=");
     404:	6d e5       	ldi	r22, 0x5D	; 93
     406:	71 e0       	ldi	r23, 0x01	; 1
     408:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write(kanal);
     40c:	61 2f       	mov	r22, r17
     40e:	70 e0       	ldi	r23, 0x00	; 0
     410:	ce 01       	movw	r24, r28
     412:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <_ZN5Usart5writeEi>
	hwcrlf;
     416:	e0 ec       	ldi	r30, 0xC0	; 192
     418:	f0 e0       	ldi	r31, 0x00	; 0
     41a:	80 81       	ld	r24, Z
     41c:	85 ff       	sbrs	r24, 5
     41e:	fd cf       	rjmp	.-6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     420:	8d e0       	ldi	r24, 0x0D	; 13
     422:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     426:	e0 ec       	ldi	r30, 0xC0	; 192
     428:	f0 e0       	ldi	r31, 0x00	; 0
     42a:	80 81       	ld	r24, Z
     42c:	85 ff       	sbrs	r24, 5
     42e:	fd cf       	rjmp	.-6      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     430:	8a e0       	ldi	r24, 0x0A	; 10
     432:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	this->test_zhody2("OK\r\n");
     436:	68 e1       	ldi	r22, 0x18	; 24
     438:	71 e0       	ldi	r23, 0x01	; 1
     43a:	ce 01       	movw	r24, r28
     43c:	0e 94 dd 01 	call	0x3ba	; 0x3ba <_ZN6Client11test_zhody2EPKc>
};
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	1f 91       	pop	r17
     446:	08 95       	ret

00000448 <_ZN6Client10posli_dataEhj>:
	}
	return false;
};


bool Client::posli_data(uint8_t kanal, uint16_t pocet){
     448:	ef 92       	push	r14
     44a:	ff 92       	push	r15
     44c:	1f 93       	push	r17
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
     452:	ec 01       	movw	r28, r24
     454:	16 2f       	mov	r17, r22
     456:	7a 01       	movw	r14, r20
	this->write("AT+CIPSEND=");
     458:	6a e6       	ldi	r22, 0x6A	; 106
     45a:	71 e0       	ldi	r23, 0x01	; 1
     45c:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write(kanal);
     460:	61 2f       	mov	r22, r17
     462:	70 e0       	ldi	r23, 0x00	; 0
     464:	ce 01       	movw	r24, r28
     466:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <_ZN5Usart5writeEi>
	this->write(",");
     46a:	66 e7       	ldi	r22, 0x76	; 118
     46c:	71 e0       	ldi	r23, 0x01	; 1
     46e:	ce 01       	movw	r24, r28
     470:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write(pocet);
     474:	b7 01       	movw	r22, r14
     476:	ce 01       	movw	r24, r28
     478:	0e 94 72 06 	call	0xce4	; 0xce4 <_ZN5Usart5writeEj>
	hwcrlf;
     47c:	e0 ec       	ldi	r30, 0xC0	; 192
     47e:	f0 e0       	ldi	r31, 0x00	; 0
     480:	80 81       	ld	r24, Z
     482:	85 ff       	sbrs	r24, 5
     484:	fd cf       	rjmp	.-6      	; 0x480 <_ZN6Client10posli_dataEhj+0x38>
     486:	8d e0       	ldi	r24, 0x0D	; 13
     488:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     48c:	e0 ec       	ldi	r30, 0xC0	; 192
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	80 81       	ld	r24, Z
     492:	85 ff       	sbrs	r24, 5
     494:	fd cf       	rjmp	.-6      	; 0x490 <_ZN6Client10posli_dataEhj+0x48>
     496:	8a e0       	ldi	r24, 0x0A	; 10
     498:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	while(1){
		while(USART.available()==0){};
     49c:	82 e2       	ldi	r24, 0x22	; 34
     49e:	92 e0       	ldi	r25, 0x02	; 2
     4a0:	0e 94 b0 04 	call	0x960	; 0x960 <_ZN5Usart9availableEv>
     4a4:	89 2b       	or	r24, r25
     4a6:	d1 f3       	breq	.-12     	; 0x49c <_ZN6Client10posli_dataEhj+0x54>
		if(USART.read()=='>') return true;
     4a8:	61 e0       	ldi	r22, 0x01	; 1
     4aa:	82 e2       	ldi	r24, 0x22	; 34
     4ac:	92 e0       	ldi	r25, 0x02	; 2
     4ae:	0e 94 86 05 	call	0xb0c	; 0xb0c <_ZN5Usart4readEb>
     4b2:	8e 33       	cpi	r24, 0x3E	; 62
     4b4:	99 f7       	brne	.-26     	; 0x49c <_ZN6Client10posli_dataEhj+0x54>
	}
};
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	df 91       	pop	r29
     4ba:	cf 91       	pop	r28
     4bc:	1f 91       	pop	r17
     4be:	ff 90       	pop	r15
     4c0:	ef 90       	pop	r14
     4c2:	08 95       	ret

000004c4 <_ZN6Client14nahraj_hodnotuEhjPKch>:
	if(!(this->test_zhody(250,"OK\r\n"))) return false; // timeout 5s
	_delay_ms(100);
	return true;
};

bool Client::nahraj_hodnotu(uint8_t kanal, uint16_t hodnota, const char* api_kluc, uint8_t field){
     4c4:	af 92       	push	r10
     4c6:	bf 92       	push	r11
     4c8:	cf 92       	push	r12
     4ca:	df 92       	push	r13
     4cc:	ef 92       	push	r14
     4ce:	ff 92       	push	r15
     4d0:	0f 93       	push	r16
     4d2:	1f 93       	push	r17
     4d4:	cf 93       	push	r28
     4d6:	df 93       	push	r29
     4d8:	ec 01       	movw	r28, r24
     4da:	16 2f       	mov	r17, r22
     4dc:	7a 01       	movw	r14, r20
     4de:	69 01       	movw	r12, r18
	uint8_t dlzka = 46; // dlzka bez hodnoty
	if (hodnota < 10)
     4e0:	4a 30       	cpi	r20, 0x0A	; 10
     4e2:	51 05       	cpc	r21, r1
     4e4:	78 f0       	brcs	.+30     	; 0x504 <_ZN6Client14nahraj_hodnotuEhjPKch+0x40>
		dlzka=dlzka+1;  // 1 cifra
	else if (hodnota < 100)
     4e6:	44 36       	cpi	r20, 0x64	; 100
     4e8:	51 05       	cpc	r21, r1
     4ea:	88 f0       	brcs	.+34     	; 0x50e <_ZN6Client14nahraj_hodnotuEhjPKch+0x4a>
		dlzka=dlzka+2;  // 2 cifry
	else if (hodnota < 1000)
     4ec:	48 3e       	cpi	r20, 0xE8	; 232
     4ee:	93 e0       	ldi	r25, 0x03	; 3
     4f0:	59 07       	cpc	r21, r25
     4f2:	90 f0       	brcs	.+36     	; 0x518 <_ZN6Client14nahraj_hodnotuEhjPKch+0x54>
		dlzka=dlzka+3;  // 3 cifry
	else if (hodnota < 10000)
     4f4:	40 31       	cpi	r20, 0x10	; 16
     4f6:	57 42       	sbci	r21, 0x27	; 39
     4f8:	a0 f0       	brcs	.+40     	; 0x522 <_ZN6Client14nahraj_hodnotuEhjPKch+0x5e>
		dlzka=dlzka+4;  // 4 cifry
	else
		dlzka=dlzka+5;	// 5 cifier
     4fa:	0f 2e       	mov	r0, r31
     4fc:	f3 e3       	ldi	r31, 0x33	; 51
     4fe:	bf 2e       	mov	r11, r31
     500:	f0 2d       	mov	r31, r0
     502:	13 c0       	rjmp	.+38     	; 0x52a <_ZN6Client14nahraj_hodnotuEhjPKch+0x66>
};

bool Client::nahraj_hodnotu(uint8_t kanal, uint16_t hodnota, const char* api_kluc, uint8_t field){
	uint8_t dlzka = 46; // dlzka bez hodnoty
	if (hodnota < 10)
		dlzka=dlzka+1;  // 1 cifra
     504:	0f 2e       	mov	r0, r31
     506:	ff e2       	ldi	r31, 0x2F	; 47
     508:	bf 2e       	mov	r11, r31
     50a:	f0 2d       	mov	r31, r0
     50c:	0e c0       	rjmp	.+28     	; 0x52a <_ZN6Client14nahraj_hodnotuEhjPKch+0x66>
	else if (hodnota < 100)
		dlzka=dlzka+2;  // 2 cifry
     50e:	0f 2e       	mov	r0, r31
     510:	f0 e3       	ldi	r31, 0x30	; 48
     512:	bf 2e       	mov	r11, r31
     514:	f0 2d       	mov	r31, r0
     516:	09 c0       	rjmp	.+18     	; 0x52a <_ZN6Client14nahraj_hodnotuEhjPKch+0x66>
	else if (hodnota < 1000)
		dlzka=dlzka+3;  // 3 cifry
     518:	0f 2e       	mov	r0, r31
     51a:	f1 e3       	ldi	r31, 0x31	; 49
     51c:	bf 2e       	mov	r11, r31
     51e:	f0 2d       	mov	r31, r0
     520:	04 c0       	rjmp	.+8      	; 0x52a <_ZN6Client14nahraj_hodnotuEhjPKch+0x66>
	else if (hodnota < 10000)
		dlzka=dlzka+4;  // 4 cifry
     522:	0f 2e       	mov	r0, r31
     524:	f2 e3       	ldi	r31, 0x32	; 50
     526:	bf 2e       	mov	r11, r31
     528:	f0 2d       	mov	r31, r0
	else
		dlzka=dlzka+5;	// 5 cifier
		
	this->write("AT"); hwcrlf;
     52a:	6b e2       	ldi	r22, 0x2B	; 43
     52c:	71 e0       	ldi	r23, 0x01	; 1
     52e:	ce 01       	movw	r24, r28
     530:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
     534:	e0 ec       	ldi	r30, 0xC0	; 192
     536:	f0 e0       	ldi	r31, 0x00	; 0
     538:	80 81       	ld	r24, Z
     53a:	85 ff       	sbrs	r24, 5
     53c:	fd cf       	rjmp	.-6      	; 0x538 <_ZN6Client14nahraj_hodnotuEhjPKch+0x74>
     53e:	8d e0       	ldi	r24, 0x0D	; 13
     540:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     544:	e0 ec       	ldi	r30, 0xC0	; 192
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	80 81       	ld	r24, Z
     54a:	85 ff       	sbrs	r24, 5
     54c:	fd cf       	rjmp	.-6      	; 0x548 <_ZN6Client14nahraj_hodnotuEhjPKch+0x84>
     54e:	8a e0       	ldi	r24, 0x0A	; 10
     550:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	if(!(this->test_zhody(10,"OK\r\n"))) return false;   // timeout 0.2s
     554:	48 e1       	ldi	r20, 0x18	; 24
     556:	51 e0       	ldi	r21, 0x01	; 1
     558:	6a e0       	ldi	r22, 0x0A	; 10
     55a:	ce 01       	movw	r24, r28
     55c:	0e 94 9d 00 	call	0x13a	; 0x13a <_ZN6Client10test_zhodyEhPKc>
     560:	a8 2e       	mov	r10, r24
     562:	88 23       	and	r24, r24
     564:	09 f4       	brne	.+2      	; 0x568 <_ZN6Client14nahraj_hodnotuEhjPKch+0xa4>
     566:	86 c0       	rjmp	.+268    	; 0x674 <_ZN6Client14nahraj_hodnotuEhjPKch+0x1b0>
     568:	8f e7       	ldi	r24, 0x7F	; 127
     56a:	99 ea       	ldi	r25, 0xA9	; 169
     56c:	23 e0       	ldi	r18, 0x03	; 3
     56e:	81 50       	subi	r24, 0x01	; 1
     570:	90 40       	sbci	r25, 0x00	; 0
     572:	20 40       	sbci	r18, 0x00	; 0
     574:	e1 f7       	brne	.-8      	; 0x56e <_ZN6Client14nahraj_hodnotuEhjPKch+0xaa>
     576:	00 c0       	rjmp	.+0      	; 0x578 <_ZN6Client14nahraj_hodnotuEhjPKch+0xb4>
     578:	00 00       	nop
	_delay_ms(100);
	
	this->write("AT+CIPSTART=");
     57a:	68 e7       	ldi	r22, 0x78	; 120
     57c:	71 e0       	ldi	r23, 0x01	; 1
     57e:	ce 01       	movw	r24, r28
     580:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write(kanal);
     584:	61 2f       	mov	r22, r17
     586:	70 e0       	ldi	r23, 0x00	; 0
     588:	ce 01       	movw	r24, r28
     58a:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <_ZN5Usart5writeEi>
	this->write(",\"TCP\",\"api.thingspeak.com\",80");
     58e:	65 e8       	ldi	r22, 0x85	; 133
     590:	71 e0       	ldi	r23, 0x01	; 1
     592:	ce 01       	movw	r24, r28
     594:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	hwcrlf;
     598:	e0 ec       	ldi	r30, 0xC0	; 192
     59a:	f0 e0       	ldi	r31, 0x00	; 0
     59c:	80 81       	ld	r24, Z
     59e:	85 ff       	sbrs	r24, 5
     5a0:	fd cf       	rjmp	.-6      	; 0x59c <_ZN6Client14nahraj_hodnotuEhjPKch+0xd8>
     5a2:	8d e0       	ldi	r24, 0x0D	; 13
     5a4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     5a8:	e0 ec       	ldi	r30, 0xC0	; 192
     5aa:	f0 e0       	ldi	r31, 0x00	; 0
     5ac:	80 81       	ld	r24, Z
     5ae:	85 ff       	sbrs	r24, 5
     5b0:	fd cf       	rjmp	.-6      	; 0x5ac <_ZN6Client14nahraj_hodnotuEhjPKch+0xe8>
     5b2:	8a e0       	ldi	r24, 0x0A	; 10
     5b4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	if(!(this->test_zhody(75,"OK\r\n"))) return false; // timeout 1.5s
     5b8:	48 e1       	ldi	r20, 0x18	; 24
     5ba:	51 e0       	ldi	r21, 0x01	; 1
     5bc:	6b e4       	ldi	r22, 0x4B	; 75
     5be:	ce 01       	movw	r24, r28
     5c0:	0e 94 9d 00 	call	0x13a	; 0x13a <_ZN6Client10test_zhodyEhPKc>
     5c4:	a8 2e       	mov	r10, r24
     5c6:	88 23       	and	r24, r24
     5c8:	09 f4       	brne	.+2      	; 0x5cc <_ZN6Client14nahraj_hodnotuEhjPKch+0x108>
     5ca:	54 c0       	rjmp	.+168    	; 0x674 <_ZN6Client14nahraj_hodnotuEhjPKch+0x1b0>
     5cc:	8f e7       	ldi	r24, 0x7F	; 127
     5ce:	99 ea       	ldi	r25, 0xA9	; 169
     5d0:	23 e0       	ldi	r18, 0x03	; 3
     5d2:	81 50       	subi	r24, 0x01	; 1
     5d4:	90 40       	sbci	r25, 0x00	; 0
     5d6:	20 40       	sbci	r18, 0x00	; 0
     5d8:	e1 f7       	brne	.-8      	; 0x5d2 <_ZN6Client14nahraj_hodnotuEhjPKch+0x10e>
     5da:	00 c0       	rjmp	.+0      	; 0x5dc <_ZN6Client14nahraj_hodnotuEhjPKch+0x118>
     5dc:	00 00       	nop
	_delay_ms(100);
		
	posli_data(kanal,dlzka);													// posielanie spravy danej dlzky na dany kanal
     5de:	4b 2d       	mov	r20, r11
     5e0:	50 e0       	ldi	r21, 0x00	; 0
     5e2:	61 2f       	mov	r22, r17
     5e4:	ce 01       	movw	r24, r28
     5e6:	0e 94 24 02 	call	0x448	; 0x448 <_ZN6Client10posli_dataEhj>
	USART.clear();
     5ea:	82 e2       	ldi	r24, 0x22	; 34
     5ec:	92 e0       	ldi	r25, 0x02	; 2
     5ee:	0e 94 b4 04 	call	0x968	; 0x968 <_ZN5Usart5clearEv>
	
//	this->write("GET /update?api_key=QSBQSRMAAK97DBBG&field1=");
	this->write("GET /update?api_key=");
     5f2:	64 ea       	ldi	r22, 0xA4	; 164
     5f4:	71 e0       	ldi	r23, 0x01	; 1
     5f6:	ce 01       	movw	r24, r28
     5f8:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write(api_kluc);
     5fc:	b6 01       	movw	r22, r12
     5fe:	ce 01       	movw	r24, r28
     600:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write("&field");
     604:	69 eb       	ldi	r22, 0xB9	; 185
     606:	71 e0       	ldi	r23, 0x01	; 1
     608:	ce 01       	movw	r24, r28
     60a:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write(field);
     60e:	60 2f       	mov	r22, r16
     610:	70 e0       	ldi	r23, 0x00	; 0
     612:	ce 01       	movw	r24, r28
     614:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <_ZN5Usart5writeEi>
	this->write("=");
     618:	64 e7       	ldi	r22, 0x74	; 116
     61a:	71 e0       	ldi	r23, 0x01	; 1
     61c:	ce 01       	movw	r24, r28
     61e:	0e 94 d0 05 	call	0xba0	; 0xba0 <_ZN5Usart5writeEPKc>
	this->write(hodnota);	
     622:	b7 01       	movw	r22, r14
     624:	ce 01       	movw	r24, r28
     626:	0e 94 72 06 	call	0xce4	; 0xce4 <_ZN5Usart5writeEj>
	hwcrlf;
     62a:	e0 ec       	ldi	r30, 0xC0	; 192
     62c:	f0 e0       	ldi	r31, 0x00	; 0
     62e:	80 81       	ld	r24, Z
     630:	85 ff       	sbrs	r24, 5
     632:	fd cf       	rjmp	.-6      	; 0x62e <_ZN6Client14nahraj_hodnotuEhjPKch+0x16a>
     634:	8d e0       	ldi	r24, 0x0D	; 13
     636:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     63a:	e0 ec       	ldi	r30, 0xC0	; 192
     63c:	f0 e0       	ldi	r31, 0x00	; 0
     63e:	80 81       	ld	r24, Z
     640:	85 ff       	sbrs	r24, 5
     642:	fd cf       	rjmp	.-6      	; 0x63e <_ZN6Client14nahraj_hodnotuEhjPKch+0x17a>
     644:	8a e0       	ldi	r24, 0x0A	; 10
     646:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	USART.clear();
     64a:	82 e2       	ldi	r24, 0x22	; 34
     64c:	92 e0       	ldi	r25, 0x02	; 2
     64e:	0e 94 b4 04 	call	0x968	; 0x968 <_ZN5Usart5clearEv>
     652:	8f e7       	ldi	r24, 0x7F	; 127
     654:	99 ea       	ldi	r25, 0xA9	; 169
     656:	23 e0       	ldi	r18, 0x03	; 3
     658:	81 50       	subi	r24, 0x01	; 1
     65a:	90 40       	sbci	r25, 0x00	; 0
     65c:	20 40       	sbci	r18, 0x00	; 0
     65e:	e1 f7       	brne	.-8      	; 0x658 <_ZN6Client14nahraj_hodnotuEhjPKch+0x194>
     660:	00 c0       	rjmp	.+0      	; 0x662 <_ZN6Client14nahraj_hodnotuEhjPKch+0x19e>
     662:	00 00       	nop
//	_delay_ms(100);
//	if(!(this->test_zhody(50,"CLOSED"))) return false; // timeout 1s
	_delay_ms(100);
	
	zatvor_spojene(kanal);		// zatvorim spojenie
     664:	61 2f       	mov	r22, r17
     666:	ce 01       	movw	r24, r28
     668:	0e 94 fd 01 	call	0x3fa	; 0x3fa <_ZN6Client14zatvor_spojeneEh>
	USART.clear();
     66c:	82 e2       	ldi	r24, 0x22	; 34
     66e:	92 e0       	ldi	r25, 0x02	; 2
     670:	0e 94 b4 04 	call	0x968	; 0x968 <_ZN5Usart5clearEv>
	return true;	
};
     674:	8a 2d       	mov	r24, r10
     676:	df 91       	pop	r29
     678:	cf 91       	pop	r28
     67a:	1f 91       	pop	r17
     67c:	0f 91       	pop	r16
     67e:	ff 90       	pop	r15
     680:	ef 90       	pop	r14
     682:	df 90       	pop	r13
     684:	cf 90       	pop	r12
     686:	bf 90       	pop	r11
     688:	af 90       	pop	r10
     68a:	08 95       	ret

0000068c <main>:

/***************************************************************************************************/
/***************************************************************************************************/

int main(void)
{
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
     694:	67 97       	sbiw	r28, 0x17	; 23
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	f8 94       	cli
     69a:	de bf       	out	0x3e, r29	; 62
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	cd bf       	out	0x3d, r28	; 61

	uint8_t kanal=0;		// kanal ESP, ktory budem pouzivat na uploadovanie sprav
	uint8_t field=1;		// field do ktoreho budem uploadovat spravy (namerane hodnoty)

	// HW reset ESP8266
	sbi(PORTD,RST_D);
     6a0:	5c 9a       	sbi	0x0b, 4	; 11
	sbi(DDRD,RST_D);
     6a2:	54 9a       	sbi	0x0a, 4	; 10
	cbi(PORTD,RST_D);	// nie je potrebne   HW RESET
     6a4:	5c 98       	cbi	0x0b, 4	; 11
     6a6:	87 eb       	ldi	r24, 0xB7	; 183
     6a8:	9b e0       	ldi	r25, 0x0B	; 11
     6aa:	01 97       	sbiw	r24, 0x01	; 1
     6ac:	f1 f7       	brne	.-4      	; 0x6aa <main+0x1e>
     6ae:	00 c0       	rjmp	.+0      	; 0x6b0 <main+0x24>
     6b0:	00 00       	nop
	_delay_ms(1);
	sbi(PORTD,RST_D);
     6b2:	5c 9a       	sbi	0x0b, 4	; 11
     6b4:	9f e7       	ldi	r25, 0x7F	; 127
     6b6:	2e ee       	ldi	r18, 0xEE	; 238
     6b8:	86 e3       	ldi	r24, 0x36	; 54
     6ba:	91 50       	subi	r25, 0x01	; 1
     6bc:	20 40       	sbci	r18, 0x00	; 0
     6be:	80 40       	sbci	r24, 0x00	; 0
     6c0:	e1 f7       	brne	.-8      	; 0x6ba <main+0x2e>
     6c2:	00 c0       	rjmp	.+0      	; 0x6c4 <main+0x38>
     6c4:	00 00       	nop
	_delay_ms(1500);		//caka 1.5s
	
	// ADC
	ADC_klasika ADCk;
     6c6:	ce 01       	movw	r24, r28
     6c8:	01 96       	adiw	r24, 0x01	; 1
     6ca:	0e 94 74 00 	call	0xe8	; 0xe8 <_ZN11ADC_klasikaC1Ev>
	ADCk.Nas_ADC(4, false);  // hodiny delene 16 jednorazovy rezim
     6ce:	40 e0       	ldi	r20, 0x00	; 0
     6d0:	64 e0       	ldi	r22, 0x04	; 4
     6d2:	ce 01       	movw	r24, r28
     6d4:	01 96       	adiw	r24, 0x01	; 1
     6d6:	0e 94 75 00 	call	0xea	; 0xea <_ZN11ADC_klasika7Nas_ADCEhb>
	ADCk.Nas_kanal(0);
     6da:	60 e0       	ldi	r22, 0x00	; 0
     6dc:	ce 01       	movw	r24, r28
     6de:	01 96       	adiw	r24, 0x01	; 1
     6e0:	0e 94 81 00 	call	0x102	; 0x102 <_ZN11ADC_klasika9Nas_kanalEh>
	// ADC
	
	//	Usart USART;  //nedeklarujeme bola deklarovana v Usart.h
	
	USART.begin( 115200,255, UsartModeEL::ASYNC_DOUBLE_SPEED );
     6e4:	01 e0       	ldi	r16, 0x01	; 1
     6e6:	10 e0       	ldi	r17, 0x00	; 0
     6e8:	2f ef       	ldi	r18, 0xFF	; 255
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	52 ec       	ldi	r21, 0xC2	; 194
     6f0:	61 e0       	ldi	r22, 0x01	; 1
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	82 e2       	ldi	r24, 0x22	; 34
     6f6:	92 e0       	ldi	r25, 0x02	; 2
     6f8:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <_ZN5Usart5beginEmj11UsartModeEL>
	//USART.nastavSW_prijimac(16);		//len ak vyuzijeme SWRx buffer
	USART.Swrite("MODUL V REZIME KLIENT - STA\r\n");
     6fc:	69 ec       	ldi	r22, 0xC9	; 201
     6fe:	71 e0       	ldi	r23, 0x01	; 1
     700:	82 e2       	ldi	r24, 0x22	; 34
     702:	92 e0       	ldi	r25, 0x02	; 2
     704:	0e 94 e5 05 	call	0xbca	; 0xbca <_ZN5Usart6SwriteEPKc>

	Client K;
     708:	ce 01       	movw	r24, r28
     70a:	02 96       	adiw	r24, 0x02	; 2
     70c:	0e 94 9a 00 	call	0x134	; 0x134 <_ZN6ClientC1Ev>
	Zobraz Z1;
     710:	ce 01       	movw	r24, r28
     712:	47 96       	adiw	r24, 0x17	; 23
     714:	0e 94 30 07 	call	0xe60	; 0xe60 <_ZN6ZobrazC1Ev>
	Z1.DSP(1);
     718:	61 e0       	ldi	r22, 0x01	; 1
     71a:	ce 01       	movw	r24, r28
     71c:	47 96       	adiw	r24, 0x17	; 23
     71e:	0e 94 4b 07 	call	0xe96	; 0xe96 <_ZN6Zobraz3DSPEh>


	K.nastav_klienta(SSID, PSWD);
     722:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <PSWD>
     726:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <PSWD+0x1>
     72a:	60 91 0a 01 	lds	r22, 0x010A	; 0x80010a <SSID>
     72e:	70 91 0b 01 	lds	r23, 0x010B	; 0x80010b <SSID+0x1>
     732:	ce 01       	movw	r24, r28
     734:	02 96       	adiw	r24, 0x02	; 2
     736:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <_ZN6Client14nastav_klientaEPKcS1_>
//	K.napisIP();						Nepotrebujem vediet IP
	USART.Swrite("\n MODUL JE NASTAVENY\r\n");
     73a:	67 ee       	ldi	r22, 0xE7	; 231
     73c:	71 e0       	ldi	r23, 0x01	; 1
     73e:	82 e2       	ldi	r24, 0x22	; 34
     740:	92 e0       	ldi	r25, 0x02	; 2
     742:	0e 94 e5 05 	call	0xbca	; 0xbca <_ZN5Usart6SwriteEPKc>
	while(1)
	{
		// Odpocitavanie 15s - najmensi interval pre upload spravy (ThingSpeak)
		for(int8_t i=14; i>=0; i--)
     746:	1e e0       	ldi	r17, 0x0E	; 14
		{
			Z1.DSP(i);
     748:	61 2f       	mov	r22, r17
     74a:	ce 01       	movw	r24, r28
     74c:	47 96       	adiw	r24, 0x17	; 23
     74e:	0e 94 4b 07 	call	0xe96	; 0xe96 <_ZN6Zobraz3DSPEh>
     752:	9f ef       	ldi	r25, 0xFF	; 255
     754:	2e e9       	ldi	r18, 0x9E	; 158
     756:	84 e2       	ldi	r24, 0x24	; 36
     758:	91 50       	subi	r25, 0x01	; 1
     75a:	20 40       	sbci	r18, 0x00	; 0
     75c:	80 40       	sbci	r24, 0x00	; 0
     75e:	e1 f7       	brne	.-8      	; 0x758 <main+0xcc>
     760:	00 c0       	rjmp	.+0      	; 0x762 <main+0xd6>
     762:	00 00       	nop
     764:	11 50       	subi	r17, 0x01	; 1
     766:	80 f7       	brcc	.-32     	; 0x748 <main+0xbc>
			_delay_ms(1000);
		}
		
		if(K.nahraj_hodnotu(kanal,ADCk.Daj_ADC(),API_KEY,field))
     768:	e0 90 06 01 	lds	r14, 0x0106	; 0x800106 <API_KEY>
     76c:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <API_KEY+0x1>
     770:	ce 01       	movw	r24, r28
     772:	01 96       	adiw	r24, 0x01	; 1
     774:	0e 94 86 00 	call	0x10c	; 0x10c <_ZN11ADC_klasika7Daj_ADCEv>
     778:	01 e0       	ldi	r16, 0x01	; 1
     77a:	97 01       	movw	r18, r14
     77c:	ac 01       	movw	r20, r24
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	ce 01       	movw	r24, r28
     782:	02 96       	adiw	r24, 0x02	; 2
     784:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_ZN6Client14nahraj_hodnotuEhjPKch>
     788:	88 23       	and	r24, r24
     78a:	31 f0       	breq	.+12     	; 0x798 <main+0x10c>
			Z1.DSP(1);
     78c:	61 e0       	ldi	r22, 0x01	; 1
     78e:	ce 01       	movw	r24, r28
     790:	47 96       	adiw	r24, 0x17	; 23
     792:	0e 94 4b 07 	call	0xe96	; 0xe96 <_ZN6Zobraz3DSPEh>
     796:	d7 cf       	rjmp	.-82     	; 0x746 <main+0xba>
		else			// Ak nastala chyba
		{
			Z1.DSP(17);	// zobrazi err
     798:	61 e1       	ldi	r22, 0x11	; 17
     79a:	ce 01       	movw	r24, r28
     79c:	47 96       	adiw	r24, 0x17	; 23
     79e:	0e 94 4b 07 	call	0xe96	; 0xe96 <_ZN6Zobraz3DSPEh>
     7a2:	9f ef       	ldi	r25, 0xFF	; 255
     7a4:	2e e9       	ldi	r18, 0x9E	; 158
     7a6:	84 e2       	ldi	r24, 0x24	; 36
     7a8:	91 50       	subi	r25, 0x01	; 1
     7aa:	20 40       	sbci	r18, 0x00	; 0
     7ac:	80 40       	sbci	r24, 0x00	; 0
     7ae:	e1 f7       	brne	.-8      	; 0x7a8 <main+0x11c>
     7b0:	00 c0       	rjmp	.+0      	; 0x7b2 <main+0x126>
     7b2:	00 00       	nop
     7b4:	c8 cf       	rjmp	.-112    	; 0x746 <main+0xba>

000007b6 <_ZN6PrerT1C1Ev>:
	uint16_t PrerT1::getTim1(void){
		return this->Timer1;
	};

	void  PrerT1::setTim1(uint16_t hod){
		this->Timer1 = hod;
     7b6:	dc 01       	movw	r26, r24
     7b8:	e4 e6       	ldi	r30, 0x64	; 100
     7ba:	f0 e0       	ldi	r31, 0x00	; 0
     7bc:	90 81       	ld	r25, Z
     7be:	97 7f       	andi	r25, 0xF7	; 247
     7c0:	90 83       	st	Z, r25
     7c2:	8f b7       	in	r24, 0x3f	; 63
     7c4:	f8 94       	cli
     7c6:	24 e9       	ldi	r18, 0x94	; 148
     7c8:	34 e0       	ldi	r19, 0x04	; 4
     7ca:	30 93 85 00 	sts	0x0085, r19	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     7ce:	20 93 84 00 	sts	0x0084, r18	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     7d2:	8f bf       	out	0x3f, r24	; 63
     7d4:	e1 e8       	ldi	r30, 0x81	; 129
     7d6:	f0 e0       	ldi	r31, 0x00	; 0
     7d8:	90 81       	ld	r25, Z
     7da:	95 60       	ori	r25, 0x05	; 5
     7dc:	90 83       	st	Z, r25
     7de:	ef e6       	ldi	r30, 0x6F	; 111
     7e0:	f0 e0       	ldi	r31, 0x00	; 0
     7e2:	90 81       	ld	r25, Z
     7e4:	91 60       	ori	r25, 0x01	; 1
     7e6:	90 83       	st	Z, r25
     7e8:	11 96       	adiw	r26, 0x01	; 1
     7ea:	3c 93       	st	X, r19
     7ec:	2e 93       	st	-X, r18
     7ee:	08 95       	ret

000007f0 <_ZN6PrerT1D1Ev>:
     7f0:	ef e6       	ldi	r30, 0x6F	; 111
     7f2:	f0 e0       	ldi	r31, 0x00	; 0
     7f4:	80 81       	ld	r24, Z
     7f6:	8e 7f       	andi	r24, 0xFE	; 254
     7f8:	80 83       	st	Z, r24
     7fa:	08 95       	ret

000007fc <__vector_13>:
	
	class PrerT1 Timer01;
	
	void PrerT1::OverflowInterrupt1(void) //staticka funkcia
												//nemozeme pouzit this
	{
     7fc:	1f 92       	push	r1
     7fe:	0f 92       	push	r0
     800:	0f b6       	in	r0, 0x3f	; 63
     802:	0f 92       	push	r0
     804:	11 24       	eor	r1, r1
     806:	8f 93       	push	r24
     808:	9f 93       	push	r25
     80a:	ef 93       	push	r30
     80c:	ff 93       	push	r31
		TCNT1 = TIMER1_TIMEOUT;		//restart
     80e:	84 e9       	ldi	r24, 0x94	; 148
     810:	94 e0       	ldi	r25, 0x04	; 4
     812:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     816:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
		Timer01.Timer1++;
     81a:	e0 e2       	ldi	r30, 0x20	; 32
     81c:	f2 e0       	ldi	r31, 0x02	; 2
     81e:	80 81       	ld	r24, Z
     820:	91 81       	ldd	r25, Z+1	; 0x01
     822:	01 96       	adiw	r24, 0x01	; 1
     824:	91 83       	std	Z+1, r25	; 0x01
     826:	80 83       	st	Z, r24
		// kod obsluhy
	};
     828:	ff 91       	pop	r31
     82a:	ef 91       	pop	r30
     82c:	9f 91       	pop	r25
     82e:	8f 91       	pop	r24
     830:	0f 90       	pop	r0
     832:	0f be       	out	0x3f, r0	; 63
     834:	0f 90       	pop	r0
     836:	1f 90       	pop	r1
     838:	18 95       	reti

0000083a <__vector_11>:
	
	void PrerT1::CompAInterrupt1(void)
	{
     83a:	1f 92       	push	r1
     83c:	0f 92       	push	r0
     83e:	0f b6       	in	r0, 0x3f	; 63
     840:	0f 92       	push	r0
     842:	11 24       	eor	r1, r1
		
		//kod obsluhy
	};
     844:	0f 90       	pop	r0
     846:	0f be       	out	0x3f, r0	; 63
     848:	0f 90       	pop	r0
     84a:	1f 90       	pop	r1
     84c:	18 95       	reti

0000084e <__vector_12>:
	
	void PrerT1::CompBInterrupt1(void)
	{
     84e:	1f 92       	push	r1
     850:	0f 92       	push	r0
     852:	0f b6       	in	r0, 0x3f	; 63
     854:	0f 92       	push	r0
     856:	11 24       	eor	r1, r1
		
		//kod obsluhy
	};
     858:	0f 90       	pop	r0
     85a:	0f be       	out	0x3f, r0	; 63
     85c:	0f 90       	pop	r0
     85e:	1f 90       	pop	r1
     860:	18 95       	reti

00000862 <__vector_10>:
	void PrerT1::CaptInterrupt1(void)
	{
     862:	1f 92       	push	r1
     864:	0f 92       	push	r0
     866:	0f b6       	in	r0, 0x3f	; 63
     868:	0f 92       	push	r0
     86a:	11 24       	eor	r1, r1
		
		//kod obsluhy
	};
     86c:	0f 90       	pop	r0
     86e:	0f be       	out	0x3f, r0	; 63
     870:	0f 90       	pop	r0
     872:	1f 90       	pop	r1
     874:	18 95       	reti

00000876 <_GLOBAL__sub_I__ZN6PrerT1C2Ev>:

	void  PrerT1::setTim1(uint16_t hod){
		this->Timer1 = hod;
	};
	
	class PrerT1 Timer01;
     876:	80 e2       	ldi	r24, 0x20	; 32
     878:	92 e0       	ldi	r25, 0x02	; 2
     87a:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN6PrerT1C1Ev>
     87e:	08 95       	ret

00000880 <_GLOBAL__sub_D__ZN6PrerT1C2Ev>:
     880:	80 e2       	ldi	r24, 0x20	; 32
     882:	92 e0       	ldi	r25, 0x02	; 2
     884:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <_ZN6PrerT1D1Ev>
     888:	08 95       	ret

0000088a <_ZN5UsartD1Ev>:
  *(ramData) = '\0';
  ramData -= len;
  result = this->find( ramData, removeReadByte);
  free( ramData); 
  return result;
};
     88a:	fc 01       	movw	r30, r24
     88c:	80 81       	ld	r24, Z
     88e:	91 81       	ldd	r25, Z+1	; 0x01
     890:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZdlPv>
     894:	08 95       	ret

00000896 <_ZN5Usart14setFrameLengthE18UsartFrameLengthEL>:
     896:	67 30       	cpi	r22, 0x07	; 7
     898:	71 05       	cpc	r23, r1
     89a:	39 f1       	breq	.+78     	; 0x8ea <_ZN5Usart14setFrameLengthE18UsartFrameLengthEL+0x54>
     89c:	3c f4       	brge	.+14     	; 0x8ac <_ZN5Usart14setFrameLengthE18UsartFrameLengthEL+0x16>
     89e:	65 30       	cpi	r22, 0x05	; 5
     8a0:	71 05       	cpc	r23, r1
     8a2:	59 f0       	breq	.+22     	; 0x8ba <_ZN5Usart14setFrameLengthE18UsartFrameLengthEL+0x24>
     8a4:	66 30       	cpi	r22, 0x06	; 6
     8a6:	71 05       	cpc	r23, r1
     8a8:	91 f0       	breq	.+36     	; 0x8ce <_ZN5Usart14setFrameLengthE18UsartFrameLengthEL+0x38>
     8aa:	08 95       	ret
     8ac:	68 30       	cpi	r22, 0x08	; 8
     8ae:	71 05       	cpc	r23, r1
     8b0:	51 f1       	breq	.+84     	; 0x906 <__stack+0x7>
     8b2:	69 30       	cpi	r22, 0x09	; 9
     8b4:	71 05       	cpc	r23, r1
     8b6:	91 f1       	breq	.+100    	; 0x91c <__stack+0x1d>
     8b8:	08 95       	ret
     8ba:	e2 ec       	ldi	r30, 0xC2	; 194
     8bc:	f0 e0       	ldi	r31, 0x00	; 0
     8be:	80 81       	ld	r24, Z
     8c0:	80 83       	st	Z, r24
     8c2:	e1 ec       	ldi	r30, 0xC1	; 193
     8c4:	f0 e0       	ldi	r31, 0x00	; 0
     8c6:	80 81       	ld	r24, Z
     8c8:	8b 7f       	andi	r24, 0xFB	; 251
     8ca:	80 83       	st	Z, r24
     8cc:	08 95       	ret
     8ce:	e2 ec       	ldi	r30, 0xC2	; 194
     8d0:	f0 e0       	ldi	r31, 0x00	; 0
     8d2:	80 81       	ld	r24, Z
     8d4:	82 60       	ori	r24, 0x02	; 2
     8d6:	80 83       	st	Z, r24
     8d8:	80 81       	ld	r24, Z
     8da:	8b 7f       	andi	r24, 0xFB	; 251
     8dc:	80 83       	st	Z, r24
     8de:	e1 ec       	ldi	r30, 0xC1	; 193
     8e0:	f0 e0       	ldi	r31, 0x00	; 0
     8e2:	80 81       	ld	r24, Z
     8e4:	8b 7f       	andi	r24, 0xFB	; 251
     8e6:	80 83       	st	Z, r24
     8e8:	08 95       	ret
     8ea:	e2 ec       	ldi	r30, 0xC2	; 194
     8ec:	f0 e0       	ldi	r31, 0x00	; 0
     8ee:	80 81       	ld	r24, Z
     8f0:	8d 7f       	andi	r24, 0xFD	; 253
     8f2:	80 83       	st	Z, r24
     8f4:	80 81       	ld	r24, Z
     8f6:	84 60       	ori	r24, 0x04	; 4
     8f8:	80 83       	st	Z, r24
     8fa:	e1 ec       	ldi	r30, 0xC1	; 193
     8fc:	f0 e0       	ldi	r31, 0x00	; 0
     8fe:	80 81       	ld	r24, Z
     900:	8b 7f       	andi	r24, 0xFB	; 251
     902:	80 83       	st	Z, r24
     904:	08 95       	ret
     906:	e2 ec       	ldi	r30, 0xC2	; 194
     908:	f0 e0       	ldi	r31, 0x00	; 0
     90a:	80 81       	ld	r24, Z
     90c:	86 60       	ori	r24, 0x06	; 6
     90e:	80 83       	st	Z, r24
     910:	e1 ec       	ldi	r30, 0xC1	; 193
     912:	f0 e0       	ldi	r31, 0x00	; 0
     914:	80 81       	ld	r24, Z
     916:	8b 7f       	andi	r24, 0xFB	; 251
     918:	80 83       	st	Z, r24
     91a:	08 95       	ret
     91c:	e2 ec       	ldi	r30, 0xC2	; 194
     91e:	f0 e0       	ldi	r31, 0x00	; 0
     920:	80 81       	ld	r24, Z
     922:	86 60       	ori	r24, 0x06	; 6
     924:	80 83       	st	Z, r24
     926:	e1 ec       	ldi	r30, 0xC1	; 193
     928:	f0 e0       	ldi	r31, 0x00	; 0
     92a:	80 81       	ld	r24, Z
     92c:	84 60       	ori	r24, 0x04	; 4
     92e:	80 83       	st	Z, r24
     930:	08 95       	ret

00000932 <_ZN5UsartC1Ev>:
     932:	fc 01       	movw	r30, r24
     934:	15 86       	std	Z+13, r1	; 0x0d
     936:	14 86       	std	Z+12, r1	; 0x0c
     938:	2f ef       	ldi	r18, 0xFF	; 255
     93a:	30 e0       	ldi	r19, 0x00	; 0
     93c:	37 87       	std	Z+15, r19	; 0x0f
     93e:	26 87       	std	Z+14, r18	; 0x0e
     940:	e2 ec       	ldi	r30, 0xC2	; 194
     942:	f0 e0       	ldi	r31, 0x00	; 0
     944:	20 81       	ld	r18, Z
     946:	20 83       	st	Z, r18
     948:	20 81       	ld	r18, Z
     94a:	28 60       	ori	r18, 0x08	; 8
     94c:	20 83       	st	Z, r18
     94e:	68 e0       	ldi	r22, 0x08	; 8
     950:	70 e0       	ldi	r23, 0x00	; 0
     952:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN5Usart14setFrameLengthE18UsartFrameLengthEL>
     956:	3a 9a       	sbi	0x07, 2	; 7
     958:	42 9a       	sbi	0x08, 2	; 8
     95a:	3b 98       	cbi	0x07, 3	; 7
     95c:	43 9a       	sbi	0x08, 3	; 8
     95e:	08 95       	ret

00000960 <_ZN5Usart9availableEv>:
     960:	fc 01       	movw	r30, r24
     962:	82 85       	ldd	r24, Z+10	; 0x0a
     964:	93 85       	ldd	r25, Z+11	; 0x0b
     966:	08 95       	ret

00000968 <_ZN5Usart5clearEv>:
     968:	fc 01       	movw	r30, r24
     96a:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     96e:	83 ff       	sbrs	r24, 3
     970:	15 c0       	rjmp	.+42     	; 0x99c <_ZN5Usart5clearEv+0x34>
     972:	a1 ec       	ldi	r26, 0xC1	; 193
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	8c 91       	ld	r24, X
     978:	87 7f       	andi	r24, 0xF7	; 247
     97a:	8c 93       	st	X, r24
     97c:	80 81       	ld	r24, Z
     97e:	91 81       	ldd	r25, Z+1	; 0x01
     980:	95 83       	std	Z+5, r25	; 0x05
     982:	84 83       	std	Z+4, r24	; 0x04
     984:	97 83       	std	Z+7, r25	; 0x07
     986:	86 83       	std	Z+6, r24	; 0x06
     988:	91 87       	std	Z+9, r25	; 0x09
     98a:	80 87       	std	Z+8, r24	; 0x08
     98c:	13 86       	std	Z+11, r1	; 0x0b
     98e:	12 86       	std	Z+10, r1	; 0x0a
     990:	15 86       	std	Z+13, r1	; 0x0d
     992:	14 86       	std	Z+12, r1	; 0x0c
     994:	8c 91       	ld	r24, X
     996:	88 60       	ori	r24, 0x08	; 8
     998:	8c 93       	st	X, r24
     99a:	0c c0       	rjmp	.+24     	; 0x9b4 <_ZN5Usart5clearEv+0x4c>
     99c:	80 81       	ld	r24, Z
     99e:	91 81       	ldd	r25, Z+1	; 0x01
     9a0:	95 83       	std	Z+5, r25	; 0x05
     9a2:	84 83       	std	Z+4, r24	; 0x04
     9a4:	97 83       	std	Z+7, r25	; 0x07
     9a6:	86 83       	std	Z+6, r24	; 0x06
     9a8:	91 87       	std	Z+9, r25	; 0x09
     9aa:	80 87       	std	Z+8, r24	; 0x08
     9ac:	13 86       	std	Z+11, r1	; 0x0b
     9ae:	12 86       	std	Z+10, r1	; 0x0a
     9b0:	15 86       	std	Z+13, r1	; 0x0d
     9b2:	14 86       	std	Z+12, r1	; 0x0c
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	08 95       	ret

000009b8 <_ZN5Usart5beginEmj11UsartModeEL>:
     9b8:	8f 92       	push	r8
     9ba:	9f 92       	push	r9
     9bc:	af 92       	push	r10
     9be:	bf 92       	push	r11
     9c0:	cf 92       	push	r12
     9c2:	df 92       	push	r13
     9c4:	ef 92       	push	r14
     9c6:	ff 92       	push	r15
     9c8:	0f 93       	push	r16
     9ca:	1f 93       	push	r17
     9cc:	cf 93       	push	r28
     9ce:	df 93       	push	r29
     9d0:	ec 01       	movw	r28, r24
     9d2:	4a 01       	movw	r8, r20
     9d4:	5b 01       	movw	r10, r22
     9d6:	69 01       	movw	r12, r18
     9d8:	ee 84       	ldd	r14, Y+14	; 0x0e
     9da:	ff 84       	ldd	r15, Y+15	; 0x0f
     9dc:	c7 01       	movw	r24, r14
     9de:	0e 94 a8 07 	call	0xf50	; 0xf50 <malloc>
     9e2:	99 83       	std	Y+1, r25	; 0x01
     9e4:	88 83       	st	Y, r24
     9e6:	e8 0e       	add	r14, r24
     9e8:	f9 1e       	adc	r15, r25
     9ea:	fb 82       	std	Y+3, r15	; 0x03
     9ec:	ea 82       	std	Y+2, r14	; 0x02
     9ee:	9d 83       	std	Y+5, r25	; 0x05
     9f0:	8c 83       	std	Y+4, r24	; 0x04
     9f2:	9f 83       	std	Y+7, r25	; 0x07
     9f4:	8e 83       	std	Y+6, r24	; 0x06
     9f6:	99 87       	std	Y+9, r25	; 0x09
     9f8:	88 87       	std	Y+8, r24	; 0x08
     9fa:	1b 86       	std	Y+11, r1	; 0x0b
     9fc:	1a 86       	std	Y+10, r1	; 0x0a
     9fe:	1d 86       	std	Y+13, r1	; 0x0d
     a00:	1c 86       	std	Y+12, r1	; 0x0c
     a02:	df 86       	std	Y+15, r13	; 0x0f
     a04:	ce 86       	std	Y+14, r12	; 0x0e
     a06:	88 8a       	std	Y+16, r8	; 0x10
     a08:	99 8a       	std	Y+17, r9	; 0x11
     a0a:	aa 8a       	std	Y+18, r10	; 0x12
     a0c:	bb 8a       	std	Y+19, r11	; 0x13
     a0e:	01 30       	cpi	r16, 0x01	; 1
     a10:	11 05       	cpc	r17, r1
     a12:	31 f1       	breq	.+76     	; 0xa60 <_ZN5Usart5beginEmj11UsartModeEL+0xa8>
     a14:	02 30       	cpi	r16, 0x02	; 2
     a16:	11 05       	cpc	r17, r1
     a18:	21 f0       	breq	.+8      	; 0xa22 <_ZN5Usart5beginEmj11UsartModeEL+0x6a>
     a1a:	01 2b       	or	r16, r17
     a1c:	09 f0       	breq	.+2      	; 0xa20 <_ZN5Usart5beginEmj11UsartModeEL+0x68>
     a1e:	56 c0       	rjmp	.+172    	; 0xacc <_ZN5Usart5beginEmj11UsartModeEL+0x114>
     a20:	3a c0       	rjmp	.+116    	; 0xa96 <_ZN5Usart5beginEmj11UsartModeEL+0xde>
     a22:	60 e8       	ldi	r22, 0x80	; 128
     a24:	7d e8       	ldi	r23, 0x8D	; 141
     a26:	8b e5       	ldi	r24, 0x5B	; 91
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	a5 01       	movw	r20, r10
     a2c:	94 01       	movw	r18, r8
     a2e:	0e 94 80 07 	call	0xf00	; 0xf00 <__udivmodsi4>
     a32:	da 01       	movw	r26, r20
     a34:	c9 01       	movw	r24, r18
     a36:	01 97       	sbiw	r24, 0x01	; 1
     a38:	a1 09       	sbc	r26, r1
     a3a:	b1 09       	sbc	r27, r1
     a3c:	ac 01       	movw	r20, r24
     a3e:	bd 01       	movw	r22, r26
     a40:	76 95       	lsr	r23
     a42:	67 95       	ror	r22
     a44:	57 95       	ror	r21
     a46:	47 95       	ror	r20
     a48:	94 2f       	mov	r25, r20
     a4a:	25 2f       	mov	r18, r21
     a4c:	e2 ec       	ldi	r30, 0xC2	; 194
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	80 81       	ld	r24, Z
     a52:	80 64       	ori	r24, 0x40	; 64
     a54:	80 83       	st	Z, r24
     a56:	80 81       	ld	r24, Z
     a58:	8f 77       	andi	r24, 0x7F	; 127
     a5a:	80 83       	st	Z, r24
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	39 c0       	rjmp	.+114    	; 0xad2 <_ZN5Usart5beginEmj11UsartModeEL+0x11a>
     a60:	60 ec       	ldi	r22, 0xC0	; 192
     a62:	76 ec       	ldi	r23, 0xC6	; 198
     a64:	8d e2       	ldi	r24, 0x2D	; 45
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	a5 01       	movw	r20, r10
     a6a:	94 01       	movw	r18, r8
     a6c:	0e 94 80 07 	call	0xf00	; 0xf00 <__udivmodsi4>
     a70:	da 01       	movw	r26, r20
     a72:	c9 01       	movw	r24, r18
     a74:	01 97       	sbiw	r24, 0x01	; 1
     a76:	a1 09       	sbc	r26, r1
     a78:	b1 09       	sbc	r27, r1
     a7a:	ac 01       	movw	r20, r24
     a7c:	bd 01       	movw	r22, r26
     a7e:	76 95       	lsr	r23
     a80:	67 95       	ror	r22
     a82:	57 95       	ror	r21
     a84:	47 95       	ror	r20
     a86:	94 2f       	mov	r25, r20
     a88:	25 2f       	mov	r18, r21
     a8a:	e2 ec       	ldi	r30, 0xC2	; 194
     a8c:	f0 e0       	ldi	r31, 0x00	; 0
     a8e:	80 81       	ld	r24, Z
     a90:	80 83       	st	Z, r24
     a92:	81 e0       	ldi	r24, 0x01	; 1
     a94:	1e c0       	rjmp	.+60     	; 0xad2 <_ZN5Usart5beginEmj11UsartModeEL+0x11a>
     a96:	60 e6       	ldi	r22, 0x60	; 96
     a98:	73 ee       	ldi	r23, 0xE3	; 227
     a9a:	86 e1       	ldi	r24, 0x16	; 22
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	a5 01       	movw	r20, r10
     aa0:	94 01       	movw	r18, r8
     aa2:	0e 94 80 07 	call	0xf00	; 0xf00 <__udivmodsi4>
     aa6:	da 01       	movw	r26, r20
     aa8:	c9 01       	movw	r24, r18
     aaa:	01 97       	sbiw	r24, 0x01	; 1
     aac:	a1 09       	sbc	r26, r1
     aae:	b1 09       	sbc	r27, r1
     ab0:	ac 01       	movw	r20, r24
     ab2:	bd 01       	movw	r22, r26
     ab4:	76 95       	lsr	r23
     ab6:	67 95       	ror	r22
     ab8:	57 95       	ror	r21
     aba:	47 95       	ror	r20
     abc:	94 2f       	mov	r25, r20
     abe:	25 2f       	mov	r18, r21
     ac0:	e2 ec       	ldi	r30, 0xC2	; 194
     ac2:	f0 e0       	ldi	r31, 0x00	; 0
     ac4:	80 81       	ld	r24, Z
     ac6:	80 83       	st	Z, r24
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	03 c0       	rjmp	.+6      	; 0xad2 <_ZN5Usart5beginEmj11UsartModeEL+0x11a>
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	20 e0       	ldi	r18, 0x00	; 0
     ad2:	88 0f       	add	r24, r24
     ad4:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     ad8:	20 93 c5 00 	sts	0x00C5, r18	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     adc:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     ae0:	e1 ec       	ldi	r30, 0xC1	; 193
     ae2:	f0 e0       	ldi	r31, 0x00	; 0
     ae4:	80 81       	ld	r24, Z
     ae6:	88 60       	ori	r24, 0x08	; 8
     ae8:	80 83       	st	Z, r24
     aea:	80 81       	ld	r24, Z
     aec:	80 69       	ori	r24, 0x90	; 144
     aee:	80 83       	st	Z, r24
     af0:	78 94       	sei
     af2:	df 91       	pop	r29
     af4:	cf 91       	pop	r28
     af6:	1f 91       	pop	r17
     af8:	0f 91       	pop	r16
     afa:	ff 90       	pop	r15
     afc:	ef 90       	pop	r14
     afe:	df 90       	pop	r13
     b00:	cf 90       	pop	r12
     b02:	bf 90       	pop	r11
     b04:	af 90       	pop	r10
     b06:	9f 90       	pop	r9
     b08:	8f 90       	pop	r8
     b0a:	08 95       	ret

00000b0c <_ZN5Usart4readEb>:
     b0c:	fc 01       	movw	r30, r24
     b0e:	82 85       	ldd	r24, Z+10	; 0x0a
     b10:	93 85       	ldd	r25, Z+11	; 0x0b
     b12:	89 2b       	or	r24, r25
     b14:	31 f1       	breq	.+76     	; 0xb62 <_ZN5Usart4readEb+0x56>
     b16:	66 23       	and	r22, r22
     b18:	a9 f0       	breq	.+42     	; 0xb44 <_ZN5Usart4readEb+0x38>
     b1a:	a4 81       	ldd	r26, Z+4	; 0x04
     b1c:	b5 81       	ldd	r27, Z+5	; 0x05
     b1e:	8d 91       	ld	r24, X+
     b20:	b5 83       	std	Z+5, r27	; 0x05
     b22:	a4 83       	std	Z+4, r26	; 0x04
     b24:	22 81       	ldd	r18, Z+2	; 0x02
     b26:	33 81       	ldd	r19, Z+3	; 0x03
     b28:	a2 17       	cp	r26, r18
     b2a:	b3 07       	cpc	r27, r19
     b2c:	21 f4       	brne	.+8      	; 0xb36 <_ZN5Usart4readEb+0x2a>
     b2e:	20 81       	ld	r18, Z
     b30:	31 81       	ldd	r19, Z+1	; 0x01
     b32:	35 83       	std	Z+5, r19	; 0x05
     b34:	24 83       	std	Z+4, r18	; 0x04
     b36:	22 85       	ldd	r18, Z+10	; 0x0a
     b38:	33 85       	ldd	r19, Z+11	; 0x0b
     b3a:	21 50       	subi	r18, 0x01	; 1
     b3c:	31 09       	sbc	r19, r1
     b3e:	33 87       	std	Z+11, r19	; 0x0b
     b40:	22 87       	std	Z+10, r18	; 0x0a
     b42:	08 95       	ret
     b44:	a6 81       	ldd	r26, Z+6	; 0x06
     b46:	b7 81       	ldd	r27, Z+7	; 0x07
     b48:	8d 91       	ld	r24, X+
     b4a:	b7 83       	std	Z+7, r27	; 0x07
     b4c:	a6 83       	std	Z+6, r26	; 0x06
     b4e:	22 81       	ldd	r18, Z+2	; 0x02
     b50:	33 81       	ldd	r19, Z+3	; 0x03
     b52:	a2 17       	cp	r26, r18
     b54:	b3 07       	cpc	r27, r19
     b56:	31 f4       	brne	.+12     	; 0xb64 <_ZN5Usart4readEb+0x58>
     b58:	20 81       	ld	r18, Z
     b5a:	31 81       	ldd	r19, Z+1	; 0x01
     b5c:	37 83       	std	Z+7, r19	; 0x07
     b5e:	26 83       	std	Z+6, r18	; 0x06
     b60:	08 95       	ret
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	08 95       	ret

00000b66 <_ZN5Usart9writeByteEh>:
     b66:	e0 ec       	ldi	r30, 0xC0	; 192
     b68:	f0 e0       	ldi	r31, 0x00	; 0
     b6a:	80 81       	ld	r24, Z
     b6c:	85 ff       	sbrs	r24, 5
     b6e:	fd cf       	rjmp	.-6      	; 0xb6a <_ZN5Usart9writeByteEh+0x4>
     b70:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     b74:	08 95       	ret

00000b76 <_ZN5Usart10SwriteByteEh>:
     b76:	42 98       	cbi	0x08, 2	; 8
     b78:	80 ed       	ldi	r24, 0xD0	; 208
     b7a:	8a 95       	dec	r24
     b7c:	f1 f7       	brne	.-4      	; 0xb7a <_ZN5Usart10SwriteByteEh+0x4>
     b7e:	88 e0       	ldi	r24, 0x08	; 8
     b80:	60 ff       	sbrs	r22, 0
     b82:	02 c0       	rjmp	.+4      	; 0xb88 <_ZN5Usart10SwriteByteEh+0x12>
     b84:	42 9a       	sbi	0x08, 2	; 8
     b86:	01 c0       	rjmp	.+2      	; 0xb8a <_ZN5Usart10SwriteByteEh+0x14>
     b88:	42 98       	cbi	0x08, 2	; 8
     b8a:	66 95       	lsr	r22
     b8c:	90 ed       	ldi	r25, 0xD0	; 208
     b8e:	9a 95       	dec	r25
     b90:	f1 f7       	brne	.-4      	; 0xb8e <_ZN5Usart10SwriteByteEh+0x18>
     b92:	81 50       	subi	r24, 0x01	; 1
     b94:	a9 f7       	brne	.-22     	; 0xb80 <_ZN5Usart10SwriteByteEh+0xa>
     b96:	42 9a       	sbi	0x08, 2	; 8
     b98:	80 ed       	ldi	r24, 0xD0	; 208
     b9a:	8a 95       	dec	r24
     b9c:	f1 f7       	brne	.-4      	; 0xb9a <_ZN5Usart10SwriteByteEh+0x24>
     b9e:	08 95       	ret

00000ba0 <_ZN5Usart5writeEPKc>:
     ba0:	0f 93       	push	r16
     ba2:	1f 93       	push	r17
     ba4:	cf 93       	push	r28
     ba6:	df 93       	push	r29
     ba8:	eb 01       	movw	r28, r22
     baa:	68 81       	ld	r22, Y
     bac:	66 23       	and	r22, r22
     bae:	41 f0       	breq	.+16     	; 0xbc0 <_ZN5Usart5writeEPKc+0x20>
     bb0:	8c 01       	movw	r16, r24
     bb2:	21 96       	adiw	r28, 0x01	; 1
     bb4:	c8 01       	movw	r24, r16
     bb6:	0e 94 b3 05 	call	0xb66	; 0xb66 <_ZN5Usart9writeByteEh>
     bba:	69 91       	ld	r22, Y+
     bbc:	61 11       	cpse	r22, r1
     bbe:	fa cf       	rjmp	.-12     	; 0xbb4 <_ZN5Usart5writeEPKc+0x14>
     bc0:	df 91       	pop	r29
     bc2:	cf 91       	pop	r28
     bc4:	1f 91       	pop	r17
     bc6:	0f 91       	pop	r16
     bc8:	08 95       	ret

00000bca <_ZN5Usart6SwriteEPKc>:
     bca:	0f 93       	push	r16
     bcc:	1f 93       	push	r17
     bce:	cf 93       	push	r28
     bd0:	df 93       	push	r29
     bd2:	eb 01       	movw	r28, r22
     bd4:	68 81       	ld	r22, Y
     bd6:	66 23       	and	r22, r22
     bd8:	41 f0       	breq	.+16     	; 0xbea <_ZN5Usart6SwriteEPKc+0x20>
     bda:	8c 01       	movw	r16, r24
     bdc:	21 96       	adiw	r28, 0x01	; 1
     bde:	c8 01       	movw	r24, r16
     be0:	0e 94 bb 05 	call	0xb76	; 0xb76 <_ZN5Usart10SwriteByteEh>
     be4:	69 91       	ld	r22, Y+
     be6:	61 11       	cpse	r22, r1
     be8:	fa cf       	rjmp	.-12     	; 0xbde <_ZN5Usart6SwriteEPKc+0x14>
     bea:	df 91       	pop	r29
     bec:	cf 91       	pop	r28
     bee:	1f 91       	pop	r17
     bf0:	0f 91       	pop	r16
     bf2:	08 95       	ret

00000bf4 <_ZN5Usart5writeEm>:
     bf4:	8f 92       	push	r8
     bf6:	9f 92       	push	r9
     bf8:	af 92       	push	r10
     bfa:	bf 92       	push	r11
     bfc:	cf 92       	push	r12
     bfe:	df 92       	push	r13
     c00:	ef 92       	push	r14
     c02:	ff 92       	push	r15
     c04:	1f 93       	push	r17
     c06:	cf 93       	push	r28
     c08:	df 93       	push	r29
     c0a:	cd b7       	in	r28, 0x3d	; 61
     c0c:	de b7       	in	r29, 0x3e	; 62
     c0e:	2a 97       	sbiw	r28, 0x0a	; 10
     c10:	0f b6       	in	r0, 0x3f	; 63
     c12:	f8 94       	cli
     c14:	de bf       	out	0x3e, r29	; 62
     c16:	0f be       	out	0x3f, r0	; 63
     c18:	cd bf       	out	0x3d, r28	; 61
     c1a:	6c 01       	movw	r12, r24
     c1c:	cb 01       	movw	r24, r22
     c1e:	ba 01       	movw	r22, r20
     c20:	10 e0       	ldi	r17, 0x00	; 0
     c22:	0f 2e       	mov	r0, r31
     c24:	fa e0       	ldi	r31, 0x0A	; 10
     c26:	8f 2e       	mov	r8, r31
     c28:	91 2c       	mov	r9, r1
     c2a:	a1 2c       	mov	r10, r1
     c2c:	b1 2c       	mov	r11, r1
     c2e:	f0 2d       	mov	r31, r0
     c30:	ee 24       	eor	r14, r14
     c32:	e3 94       	inc	r14
     c34:	f1 2c       	mov	r15, r1
     c36:	ec 0e       	add	r14, r28
     c38:	fd 1e       	adc	r15, r29
     c3a:	e1 0e       	add	r14, r17
     c3c:	f1 1c       	adc	r15, r1
     c3e:	a5 01       	movw	r20, r10
     c40:	94 01       	movw	r18, r8
     c42:	0e 94 80 07 	call	0xf00	; 0xf00 <__udivmodsi4>
     c46:	60 5d       	subi	r22, 0xD0	; 208
     c48:	f7 01       	movw	r30, r14
     c4a:	60 83       	st	Z, r22
     c4c:	1f 5f       	subi	r17, 0xFF	; 255
     c4e:	62 2f       	mov	r22, r18
     c50:	73 2f       	mov	r23, r19
     c52:	84 2f       	mov	r24, r20
     c54:	95 2f       	mov	r25, r21
     c56:	61 15       	cp	r22, r1
     c58:	71 05       	cpc	r23, r1
     c5a:	81 05       	cpc	r24, r1
     c5c:	91 05       	cpc	r25, r1
     c5e:	41 f7       	brne	.-48     	; 0xc30 <_ZN5Usart5writeEm+0x3c>
     c60:	11 23       	and	r17, r17
     c62:	69 f0       	breq	.+26     	; 0xc7e <_ZN5Usart5writeEm+0x8a>
     c64:	11 50       	subi	r17, 0x01	; 1
     c66:	e1 e0       	ldi	r30, 0x01	; 1
     c68:	f0 e0       	ldi	r31, 0x00	; 0
     c6a:	ec 0f       	add	r30, r28
     c6c:	fd 1f       	adc	r31, r29
     c6e:	e1 0f       	add	r30, r17
     c70:	f1 1d       	adc	r31, r1
     c72:	60 81       	ld	r22, Z
     c74:	c6 01       	movw	r24, r12
     c76:	0e 94 b3 05 	call	0xb66	; 0xb66 <_ZN5Usart9writeByteEh>
     c7a:	11 11       	cpse	r17, r1
     c7c:	f3 cf       	rjmp	.-26     	; 0xc64 <_ZN5Usart5writeEm+0x70>
     c7e:	2a 96       	adiw	r28, 0x0a	; 10
     c80:	0f b6       	in	r0, 0x3f	; 63
     c82:	f8 94       	cli
     c84:	de bf       	out	0x3e, r29	; 62
     c86:	0f be       	out	0x3f, r0	; 63
     c88:	cd bf       	out	0x3d, r28	; 61
     c8a:	df 91       	pop	r29
     c8c:	cf 91       	pop	r28
     c8e:	1f 91       	pop	r17
     c90:	ff 90       	pop	r15
     c92:	ef 90       	pop	r14
     c94:	df 90       	pop	r13
     c96:	cf 90       	pop	r12
     c98:	bf 90       	pop	r11
     c9a:	af 90       	pop	r10
     c9c:	9f 90       	pop	r9
     c9e:	8f 90       	pop	r8
     ca0:	08 95       	ret

00000ca2 <_ZN5Usart5writeEl>:
     ca2:	cf 92       	push	r12
     ca4:	df 92       	push	r13
     ca6:	ef 92       	push	r14
     ca8:	ff 92       	push	r15
     caa:	cf 93       	push	r28
     cac:	df 93       	push	r29
     cae:	ec 01       	movw	r28, r24
     cb0:	6a 01       	movw	r12, r20
     cb2:	7b 01       	movw	r14, r22
     cb4:	77 23       	and	r23, r23
     cb6:	1c f4       	brge	.+6      	; 0xcbe <_ZN5Usart5writeEl+0x1c>
     cb8:	6d e2       	ldi	r22, 0x2D	; 45
     cba:	0e 94 b3 05 	call	0xb66	; 0xb66 <_ZN5Usart9writeByteEh>
     cbe:	b7 01       	movw	r22, r14
     cc0:	a6 01       	movw	r20, r12
     cc2:	ce 01       	movw	r24, r28
     cc4:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <_ZN5Usart5writeEm>
     cc8:	df 91       	pop	r29
     cca:	cf 91       	pop	r28
     ccc:	ff 90       	pop	r15
     cce:	ef 90       	pop	r14
     cd0:	df 90       	pop	r13
     cd2:	cf 90       	pop	r12
     cd4:	08 95       	ret

00000cd6 <_ZN5Usart5writeEi>:
     cd6:	ab 01       	movw	r20, r22
     cd8:	77 0f       	add	r23, r23
     cda:	66 0b       	sbc	r22, r22
     cdc:	77 0b       	sbc	r23, r23
     cde:	0e 94 51 06 	call	0xca2	; 0xca2 <_ZN5Usart5writeEl>
     ce2:	08 95       	ret

00000ce4 <_ZN5Usart5writeEj>:
     ce4:	ab 01       	movw	r20, r22
     ce6:	60 e0       	ldi	r22, 0x00	; 0
     ce8:	70 e0       	ldi	r23, 0x00	; 0
     cea:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <_ZN5Usart5writeEm>
     cee:	08 95       	ret

00000cf0 <_ZN5Usart4findEPKcb>:
     cf0:	bf 92       	push	r11
     cf2:	cf 92       	push	r12
     cf4:	df 92       	push	r13
     cf6:	ef 92       	push	r14
     cf8:	ff 92       	push	r15
     cfa:	0f 93       	push	r16
     cfc:	1f 93       	push	r17
     cfe:	cf 93       	push	r28
     d00:	df 93       	push	r29
     d02:	dc 01       	movw	r26, r24
     d04:	fb 01       	movw	r30, r22
     d06:	80 81       	ld	r24, Z
     d08:	88 23       	and	r24, r24
     d0a:	d1 f0       	breq	.+52     	; 0xd40 <_ZN5Usart4findEPKcb+0x50>
     d0c:	31 96       	adiw	r30, 0x01	; 1
     d0e:	c0 e0       	ldi	r28, 0x00	; 0
     d10:	cf 5f       	subi	r28, 0xFF	; 255
     d12:	91 91       	ld	r25, Z+
     d14:	91 11       	cpse	r25, r1
     d16:	fc cf       	rjmp	.-8      	; 0xd10 <_ZN5Usart4findEPKcb+0x20>
     d18:	19 c0       	rjmp	.+50     	; 0xd4c <_ZN5Usart4findEPKcb+0x5c>
     d1a:	f6 01       	movw	r30, r12
     d1c:	e1 0f       	add	r30, r17
     d1e:	f1 1d       	adc	r31, r1
     d20:	00 81       	ld	r16, Z
     d22:	6b 2d       	mov	r22, r11
     d24:	c7 01       	movw	r24, r14
     d26:	0e 94 86 05 	call	0xb0c	; 0xb0c <_ZN5Usart4readEb>
     d2a:	08 13       	cpse	r16, r24
     d2c:	02 c0       	rjmp	.+4      	; 0xd32 <_ZN5Usart4findEPKcb+0x42>
     d2e:	1f 5f       	subi	r17, 0xFF	; 255
     d30:	01 c0       	rjmp	.+2      	; 0xd34 <_ZN5Usart4findEPKcb+0x44>
     d32:	10 e0       	ldi	r17, 0x00	; 0
     d34:	1c 17       	cp	r17, r28
     d36:	31 f0       	breq	.+12     	; 0xd44 <_ZN5Usart4findEPKcb+0x54>
     d38:	d1 50       	subi	r29, 0x01	; 1
     d3a:	79 f7       	brne	.-34     	; 0xd1a <_ZN5Usart4findEPKcb+0x2a>
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	1a c0       	rjmp	.+52     	; 0xd74 <_ZN5Usart4findEPKcb+0x84>
     d40:	80 e0       	ldi	r24, 0x00	; 0
     d42:	18 c0       	rjmp	.+48     	; 0xd74 <_ZN5Usart4findEPKcb+0x84>
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	16 c0       	rjmp	.+44     	; 0xd74 <_ZN5Usart4findEPKcb+0x84>
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	14 c0       	rjmp	.+40     	; 0xd74 <_ZN5Usart4findEPKcb+0x84>
     d4c:	1a 96       	adiw	r26, 0x0a	; 10
     d4e:	2d 91       	ld	r18, X+
     d50:	3c 91       	ld	r19, X
     d52:	1b 97       	sbiw	r26, 0x0b	; 11
     d54:	d2 2f       	mov	r29, r18
     d56:	14 96       	adiw	r26, 0x04	; 4
     d58:	8d 91       	ld	r24, X+
     d5a:	9c 91       	ld	r25, X
     d5c:	15 97       	sbiw	r26, 0x05	; 5
     d5e:	17 96       	adiw	r26, 0x07	; 7
     d60:	9c 93       	st	X, r25
     d62:	8e 93       	st	-X, r24
     d64:	16 97       	sbiw	r26, 0x06	; 6
     d66:	22 23       	and	r18, r18
     d68:	79 f3       	breq	.-34     	; 0xd48 <_ZN5Usart4findEPKcb+0x58>
     d6a:	b4 2e       	mov	r11, r20
     d6c:	6b 01       	movw	r12, r22
     d6e:	7d 01       	movw	r14, r26
     d70:	10 e0       	ldi	r17, 0x00	; 0
     d72:	d3 cf       	rjmp	.-90     	; 0xd1a <_ZN5Usart4findEPKcb+0x2a>
     d74:	df 91       	pop	r29
     d76:	cf 91       	pop	r28
     d78:	1f 91       	pop	r17
     d7a:	0f 91       	pop	r16
     d7c:	ff 90       	pop	r15
     d7e:	ef 90       	pop	r14
     d80:	df 90       	pop	r13
     d82:	cf 90       	pop	r12
     d84:	bf 90       	pop	r11
     d86:	08 95       	ret

00000d88 <_Z8rxVectorv>:
class Usart USART;		

void rxVector() {
 
 
   *(USART.rxDataEnd) = UDR0;    
     d88:	e2 e2       	ldi	r30, 0x22	; 34
     d8a:	f2 e0       	ldi	r31, 0x02	; 2
     d8c:	a0 85       	ldd	r26, Z+8	; 0x08
     d8e:	b1 85       	ldd	r27, Z+9	; 0x09
     d90:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     d94:	8c 93       	st	X, r24
								
  USART.rxDataEnd++;
     d96:	80 85       	ldd	r24, Z+8	; 0x08
     d98:	91 85       	ldd	r25, Z+9	; 0x09
     d9a:	01 96       	adiw	r24, 0x01	; 1
     d9c:	91 87       	std	Z+9, r25	; 0x09
     d9e:	80 87       	std	Z+8, r24	; 0x08
 
  if ( USART.rxDataEnd >= USART.rxBuffEnd) {
     da0:	22 81       	ldd	r18, Z+2	; 0x02
     da2:	33 81       	ldd	r19, Z+3	; 0x03
     da4:	82 17       	cp	r24, r18
     da6:	93 07       	cpc	r25, r19
     da8:	20 f0       	brcs	.+8      	; 0xdb2 <_Z8rxVectorv+0x2a>
   USART.rxDataEnd = USART.rxBuffStart;
     daa:	80 81       	ld	r24, Z
     dac:	91 81       	ldd	r25, Z+1	; 0x01
     dae:	91 87       	std	Z+9, r25	; 0x09
     db0:	80 87       	std	Z+8, r24	; 0x08
  }
  
  if ( USART.rxLength == USART.rxMaxLength) {
     db2:	e2 e2       	ldi	r30, 0x22	; 34
     db4:	f2 e0       	ldi	r31, 0x02	; 2
     db6:	42 85       	ldd	r20, Z+10	; 0x0a
     db8:	53 85       	ldd	r21, Z+11	; 0x0b
     dba:	86 85       	ldd	r24, Z+14	; 0x0e
     dbc:	97 85       	ldd	r25, Z+15	; 0x0f
     dbe:	48 17       	cp	r20, r24
     dc0:	59 07       	cpc	r21, r25
     dc2:	a9 f4       	brne	.+42     	; 0xdee <_Z8rxVectorv+0x66>
    USART.rxLostBytesNr++;
     dc4:	84 85       	ldd	r24, Z+12	; 0x0c
     dc6:	95 85       	ldd	r25, Z+13	; 0x0d
     dc8:	01 96       	adiw	r24, 0x01	; 1
     dca:	95 87       	std	Z+13, r25	; 0x0d
     dcc:	84 87       	std	Z+12, r24	; 0x0c
      if ( ( USART.rxDataStart + 1) == USART.rxBuffEnd) {
     dce:	84 81       	ldd	r24, Z+4	; 0x04
     dd0:	95 81       	ldd	r25, Z+5	; 0x05
     dd2:	01 96       	adiw	r24, 0x01	; 1
     dd4:	28 17       	cp	r18, r24
     dd6:	39 07       	cpc	r19, r25
     dd8:	29 f4       	brne	.+10     	; 0xde4 <_Z8rxVectorv+0x5c>
      USART.rxDataStart = USART.rxBuffStart;
     dda:	80 81       	ld	r24, Z
     ddc:	91 81       	ldd	r25, Z+1	; 0x01
     dde:	95 83       	std	Z+5, r25	; 0x05
     de0:	84 83       	std	Z+4, r24	; 0x04
     de2:	08 95       	ret
	  }
	else    USART.rxDataStart++;
     de4:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <USART+0x5>
     de8:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <USART+0x4>
     dec:	08 95       	ret
  }
 	else   USART.rxLength++; 
     dee:	e2 e2       	ldi	r30, 0x22	; 34
     df0:	f2 e0       	ldi	r31, 0x02	; 2
     df2:	82 85       	ldd	r24, Z+10	; 0x0a
     df4:	93 85       	ldd	r25, Z+11	; 0x0b
     df6:	01 96       	adiw	r24, 0x01	; 1
     df8:	93 87       	std	Z+11, r25	; 0x0b
     dfa:	82 87       	std	Z+10, r24	; 0x0a
     dfc:	08 95       	ret

00000dfe <__vector_18>:
	 else   USART.rxLength++;
	 
 }
 */
 
 ISR( USART_RX_vect) {
     dfe:	1f 92       	push	r1
     e00:	0f 92       	push	r0
     e02:	0f b6       	in	r0, 0x3f	; 63
     e04:	0f 92       	push	r0
     e06:	11 24       	eor	r1, r1
     e08:	2f 93       	push	r18
     e0a:	3f 93       	push	r19
     e0c:	4f 93       	push	r20
     e0e:	5f 93       	push	r21
     e10:	6f 93       	push	r22
     e12:	7f 93       	push	r23
     e14:	8f 93       	push	r24
     e16:	9f 93       	push	r25
     e18:	af 93       	push	r26
     e1a:	bf 93       	push	r27
     e1c:	ef 93       	push	r30
     e1e:	ff 93       	push	r31
 rxVector();
     e20:	0e 94 c4 06 	call	0xd88	; 0xd88 <_Z8rxVectorv>
  };
     e24:	ff 91       	pop	r31
     e26:	ef 91       	pop	r30
     e28:	bf 91       	pop	r27
     e2a:	af 91       	pop	r26
     e2c:	9f 91       	pop	r25
     e2e:	8f 91       	pop	r24
     e30:	7f 91       	pop	r23
     e32:	6f 91       	pop	r22
     e34:	5f 91       	pop	r21
     e36:	4f 91       	pop	r20
     e38:	3f 91       	pop	r19
     e3a:	2f 91       	pop	r18
     e3c:	0f 90       	pop	r0
     e3e:	0f be       	out	0x3f, r0	; 63
     e40:	0f 90       	pop	r0
     e42:	1f 90       	pop	r1
     e44:	18 95       	reti

00000e46 <_GLOBAL__sub_I__ZN5UsartC2Ev>:
/*          the UDRn register                                           */
/* @param usart                                                         */
/*          the Usart instance used with the interrupt (USARTn)         */
/************************************************************************/

class Usart USART;		
     e46:	82 e2       	ldi	r24, 0x22	; 34
     e48:	92 e0       	ldi	r25, 0x02	; 2
     e4a:	0e 94 99 04 	call	0x932	; 0x932 <_ZN5UsartC1Ev>
     e4e:	08 95       	ret

00000e50 <_GLOBAL__sub_D__ZN5UsartC2Ev>:
     e50:	82 e2       	ldi	r24, 0x22	; 34
     e52:	92 e0       	ldi	r25, 0x02	; 2
     e54:	0e 94 45 04 	call	0x88a	; 0x88a <_ZN5UsartD1Ev>
     e58:	08 95       	ret

00000e5a <_ZdlPv>:
/************************************************************************/
/* @operator                                                           */
/* Allow the usage of the "delete" C++ operator                         */
/************************************************************************/
void operator delete( void * ptr) {
  free( ptr);
     e5a:	0e 94 40 08 	call	0x1080	; 0x1080 <free>
     e5e:	08 95       	ret

00000e60 <_ZN6ZobrazC1Ev>:
	if(B) cbi(PORTD,B_LED); else sbi(PORTD,B_LED);
	for(uint8_t i=0; i<cas; i++)_delay_ms(1);
	sbi(PORTD,R_LED); 
	sbi(PORTD,G_LED); 
	sbi(PORTD,B_LED); 
};
     e60:	56 9a       	sbi	0x0a, 6	; 10
     e62:	55 9a       	sbi	0x0a, 5	; 10
     e64:	53 9a       	sbi	0x0a, 3	; 10
     e66:	5e 9a       	sbi	0x0b, 6	; 11
     e68:	5d 9a       	sbi	0x0b, 5	; 11
     e6a:	5b 9a       	sbi	0x0b, 3	; 11
     e6c:	3d 9a       	sbi	0x07, 5	; 7
     e6e:	3c 9a       	sbi	0x07, 4	; 7
     e70:	57 9a       	sbi	0x0a, 7	; 10
     e72:	21 9a       	sbi	0x04, 1	; 4
     e74:	08 95       	ret

00000e76 <_ZN6Zobraz4zobrEh>:
};


//*****************************private****************************
void Zobraz::zobr(uint8_t vys){
	sbi(PORTC,OE);			//vystup do stavu HI
     e76:	44 9a       	sbi	0x08, 4	; 8
     e78:	88 e0       	ldi	r24, 0x08	; 8
	for(uint8_t i=0;i<8;i++)
	{
		if((vys&0b10000000)==0b10000000) sbi(PORTC,SER);else cbi(PORTC,SER);//data
     e7a:	66 23       	and	r22, r22
     e7c:	14 f4       	brge	.+4      	; 0xe82 <_ZN6Zobraz4zobrEh+0xc>
     e7e:	45 9a       	sbi	0x08, 5	; 8
     e80:	01 c0       	rjmp	.+2      	; 0xe84 <_ZN6Zobraz4zobrEh+0xe>
     e82:	45 98       	cbi	0x08, 5	; 8
		sbi(PORTB,SRCLK);
     e84:	29 9a       	sbi	0x05, 1	; 5
		cbi(PORTB,SRCLK);  //hodiny
     e86:	29 98       	cbi	0x05, 1	; 5
		vys=vys<<1;
     e88:	66 0f       	add	r22, r22
     e8a:	81 50       	subi	r24, 0x01	; 1


//*****************************private****************************
void Zobraz::zobr(uint8_t vys){
	sbi(PORTC,OE);			//vystup do stavu HI
	for(uint8_t i=0;i<8;i++)
     e8c:	b1 f7       	brne	.-20     	; 0xe7a <_ZN6Zobraz4zobrEh+0x4>
		if((vys&0b10000000)==0b10000000) sbi(PORTC,SER);else cbi(PORTC,SER);//data
		sbi(PORTB,SRCLK);
		cbi(PORTB,SRCLK);  //hodiny
		vys=vys<<1;
	}
	sbi(PORTD,RCLK);		//prepis z posuvneho registra do pamate
     e8e:	5f 9a       	sbi	0x0b, 7	; 11
	cbi(PORTD,RCLK);		// naspat
     e90:	5f 98       	cbi	0x0b, 7	; 11
	cbi(PORTC,OE);			//set output
     e92:	44 98       	cbi	0x08, 4	; 8
     e94:	08 95       	ret

00000e96 <_ZN6Zobraz3DSPEh>:
};
void Zobraz::DSP(uint8_t znak)
{
	uint8_t vys;
	znak= znak & 0x1f;
	switch(znak)
     e96:	e6 2f       	mov	r30, r22
     e98:	ef 71       	andi	r30, 0x1F	; 31
     e9a:	4e 2f       	mov	r20, r30
     e9c:	50 e0       	ldi	r21, 0x00	; 0
     e9e:	fa 01       	movw	r30, r20
     ea0:	31 97       	sbiw	r30, 0x01	; 1
     ea2:	e2 31       	cpi	r30, 0x12	; 18
     ea4:	f1 05       	cpc	r31, r1
     ea6:	40 f5       	brcc	.+80     	; 0xef8 <_ZN6Zobraz3DSPEh+0x62>
     ea8:	ec 5c       	subi	r30, 0xCC	; 204
     eaa:	ff 4f       	sbci	r31, 0xFF	; 255
     eac:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <__tablejump2__>
	{
		case 0: vys=nula; break;
		case 1: vys=jedna; break;
     eb0:	66 e0       	ldi	r22, 0x06	; 6
     eb2:	23 c0       	rjmp	.+70     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 2: vys=dva; break;
     eb4:	6b e5       	ldi	r22, 0x5B	; 91
     eb6:	21 c0       	rjmp	.+66     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 3: vys=tri; break;
     eb8:	6f e4       	ldi	r22, 0x4F	; 79
     eba:	1f c0       	rjmp	.+62     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 4: vys=styri; break;
     ebc:	66 e6       	ldi	r22, 0x66	; 102
     ebe:	1d c0       	rjmp	.+58     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 5: vys=pat; break;
     ec0:	6d e6       	ldi	r22, 0x6D	; 109
     ec2:	1b c0       	rjmp	.+54     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 6: vys=sest; break;
     ec4:	6d e7       	ldi	r22, 0x7D	; 125
     ec6:	19 c0       	rjmp	.+50     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 7: vys=sedem; break;
     ec8:	67 e0       	ldi	r22, 0x07	; 7
     eca:	17 c0       	rjmp	.+46     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 8: vys=osem; break;
     ecc:	6f e7       	ldi	r22, 0x7F	; 127
     ece:	15 c0       	rjmp	.+42     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 9: vys=devat; break;
     ed0:	6f e6       	ldi	r22, 0x6F	; 111
     ed2:	13 c0       	rjmp	.+38     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 10: vys=ahex; break;
     ed4:	67 e7       	ldi	r22, 0x77	; 119
     ed6:	11 c0       	rjmp	.+34     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 11: vys=bhex; break;
     ed8:	6c e7       	ldi	r22, 0x7C	; 124
     eda:	0f c0       	rjmp	.+30     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 12: vys=chex; break;
     edc:	68 e5       	ldi	r22, 0x58	; 88
     ede:	0d c0       	rjmp	.+26     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 13: vys=dhex; break;
     ee0:	6e e5       	ldi	r22, 0x5E	; 94
     ee2:	0b c0       	rjmp	.+22     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 14: vys=ehex; break;
     ee4:	69 e7       	ldi	r22, 0x79	; 121
     ee6:	09 c0       	rjmp	.+18     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 15: vys=fhex; break;
     ee8:	61 e7       	ldi	r22, 0x71	; 113
     eea:	07 c0       	rjmp	.+14     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 16: vys=dot; break;
     eec:	60 e8       	ldi	r22, 0x80	; 128
     eee:	05 c0       	rjmp	.+10     	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 17: vys=err; break;
     ef0:	69 e4       	ldi	r22, 0x49	; 73
     ef2:	03 c0       	rjmp	.+6      	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
		case 18: vys=non; break;
     ef4:	60 e0       	ldi	r22, 0x00	; 0
     ef6:	01 c0       	rjmp	.+2      	; 0xefa <_ZN6Zobraz3DSPEh+0x64>
{
	uint8_t vys;
	znak= znak & 0x1f;
	switch(znak)
	{
		case 0: vys=nula; break;
     ef8:	6f e3       	ldi	r22, 0x3F	; 63
		case 17: vys=err; break;
		case 18: vys=non; break;
		default: vys=nula;
	}
	
	this->zobr(vys);
     efa:	0e 94 3b 07 	call	0xe76	; 0xe76 <_ZN6Zobraz4zobrEh>
     efe:	08 95       	ret

00000f00 <__udivmodsi4>:
     f00:	a1 e2       	ldi	r26, 0x21	; 33
     f02:	1a 2e       	mov	r1, r26
     f04:	aa 1b       	sub	r26, r26
     f06:	bb 1b       	sub	r27, r27
     f08:	fd 01       	movw	r30, r26
     f0a:	0d c0       	rjmp	.+26     	; 0xf26 <__udivmodsi4_ep>

00000f0c <__udivmodsi4_loop>:
     f0c:	aa 1f       	adc	r26, r26
     f0e:	bb 1f       	adc	r27, r27
     f10:	ee 1f       	adc	r30, r30
     f12:	ff 1f       	adc	r31, r31
     f14:	a2 17       	cp	r26, r18
     f16:	b3 07       	cpc	r27, r19
     f18:	e4 07       	cpc	r30, r20
     f1a:	f5 07       	cpc	r31, r21
     f1c:	20 f0       	brcs	.+8      	; 0xf26 <__udivmodsi4_ep>
     f1e:	a2 1b       	sub	r26, r18
     f20:	b3 0b       	sbc	r27, r19
     f22:	e4 0b       	sbc	r30, r20
     f24:	f5 0b       	sbc	r31, r21

00000f26 <__udivmodsi4_ep>:
     f26:	66 1f       	adc	r22, r22
     f28:	77 1f       	adc	r23, r23
     f2a:	88 1f       	adc	r24, r24
     f2c:	99 1f       	adc	r25, r25
     f2e:	1a 94       	dec	r1
     f30:	69 f7       	brne	.-38     	; 0xf0c <__udivmodsi4_loop>
     f32:	60 95       	com	r22
     f34:	70 95       	com	r23
     f36:	80 95       	com	r24
     f38:	90 95       	com	r25
     f3a:	9b 01       	movw	r18, r22
     f3c:	ac 01       	movw	r20, r24
     f3e:	bd 01       	movw	r22, r26
     f40:	cf 01       	movw	r24, r30
     f42:	08 95       	ret

00000f44 <__tablejump2__>:
     f44:	ee 0f       	add	r30, r30
     f46:	ff 1f       	adc	r31, r31
     f48:	05 90       	lpm	r0, Z+
     f4a:	f4 91       	lpm	r31, Z
     f4c:	e0 2d       	mov	r30, r0
     f4e:	09 94       	ijmp

00000f50 <malloc>:
     f50:	0f 93       	push	r16
     f52:	1f 93       	push	r17
     f54:	cf 93       	push	r28
     f56:	df 93       	push	r29
     f58:	82 30       	cpi	r24, 0x02	; 2
     f5a:	91 05       	cpc	r25, r1
     f5c:	10 f4       	brcc	.+4      	; 0xf62 <malloc+0x12>
     f5e:	82 e0       	ldi	r24, 0x02	; 2
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	e0 91 39 02 	lds	r30, 0x0239	; 0x800239 <__flp>
     f66:	f0 91 3a 02 	lds	r31, 0x023A	; 0x80023a <__flp+0x1>
     f6a:	20 e0       	ldi	r18, 0x00	; 0
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	a0 e0       	ldi	r26, 0x00	; 0
     f70:	b0 e0       	ldi	r27, 0x00	; 0
     f72:	30 97       	sbiw	r30, 0x00	; 0
     f74:	19 f1       	breq	.+70     	; 0xfbc <malloc+0x6c>
     f76:	40 81       	ld	r20, Z
     f78:	51 81       	ldd	r21, Z+1	; 0x01
     f7a:	02 81       	ldd	r16, Z+2	; 0x02
     f7c:	13 81       	ldd	r17, Z+3	; 0x03
     f7e:	48 17       	cp	r20, r24
     f80:	59 07       	cpc	r21, r25
     f82:	c8 f0       	brcs	.+50     	; 0xfb6 <malloc+0x66>
     f84:	84 17       	cp	r24, r20
     f86:	95 07       	cpc	r25, r21
     f88:	69 f4       	brne	.+26     	; 0xfa4 <malloc+0x54>
     f8a:	10 97       	sbiw	r26, 0x00	; 0
     f8c:	31 f0       	breq	.+12     	; 0xf9a <malloc+0x4a>
     f8e:	12 96       	adiw	r26, 0x02	; 2
     f90:	0c 93       	st	X, r16
     f92:	12 97       	sbiw	r26, 0x02	; 2
     f94:	13 96       	adiw	r26, 0x03	; 3
     f96:	1c 93       	st	X, r17
     f98:	27 c0       	rjmp	.+78     	; 0xfe8 <malloc+0x98>
     f9a:	00 93 39 02 	sts	0x0239, r16	; 0x800239 <__flp>
     f9e:	10 93 3a 02 	sts	0x023A, r17	; 0x80023a <__flp+0x1>
     fa2:	22 c0       	rjmp	.+68     	; 0xfe8 <malloc+0x98>
     fa4:	21 15       	cp	r18, r1
     fa6:	31 05       	cpc	r19, r1
     fa8:	19 f0       	breq	.+6      	; 0xfb0 <malloc+0x60>
     faa:	42 17       	cp	r20, r18
     fac:	53 07       	cpc	r21, r19
     fae:	18 f4       	brcc	.+6      	; 0xfb6 <malloc+0x66>
     fb0:	9a 01       	movw	r18, r20
     fb2:	bd 01       	movw	r22, r26
     fb4:	ef 01       	movw	r28, r30
     fb6:	df 01       	movw	r26, r30
     fb8:	f8 01       	movw	r30, r16
     fba:	db cf       	rjmp	.-74     	; 0xf72 <malloc+0x22>
     fbc:	21 15       	cp	r18, r1
     fbe:	31 05       	cpc	r19, r1
     fc0:	f9 f0       	breq	.+62     	; 0x1000 <malloc+0xb0>
     fc2:	28 1b       	sub	r18, r24
     fc4:	39 0b       	sbc	r19, r25
     fc6:	24 30       	cpi	r18, 0x04	; 4
     fc8:	31 05       	cpc	r19, r1
     fca:	80 f4       	brcc	.+32     	; 0xfec <malloc+0x9c>
     fcc:	8a 81       	ldd	r24, Y+2	; 0x02
     fce:	9b 81       	ldd	r25, Y+3	; 0x03
     fd0:	61 15       	cp	r22, r1
     fd2:	71 05       	cpc	r23, r1
     fd4:	21 f0       	breq	.+8      	; 0xfde <malloc+0x8e>
     fd6:	fb 01       	movw	r30, r22
     fd8:	93 83       	std	Z+3, r25	; 0x03
     fda:	82 83       	std	Z+2, r24	; 0x02
     fdc:	04 c0       	rjmp	.+8      	; 0xfe6 <malloc+0x96>
     fde:	90 93 3a 02 	sts	0x023A, r25	; 0x80023a <__flp+0x1>
     fe2:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <__flp>
     fe6:	fe 01       	movw	r30, r28
     fe8:	32 96       	adiw	r30, 0x02	; 2
     fea:	44 c0       	rjmp	.+136    	; 0x1074 <malloc+0x124>
     fec:	fe 01       	movw	r30, r28
     fee:	e2 0f       	add	r30, r18
     ff0:	f3 1f       	adc	r31, r19
     ff2:	81 93       	st	Z+, r24
     ff4:	91 93       	st	Z+, r25
     ff6:	22 50       	subi	r18, 0x02	; 2
     ff8:	31 09       	sbc	r19, r1
     ffa:	39 83       	std	Y+1, r19	; 0x01
     ffc:	28 83       	st	Y, r18
     ffe:	3a c0       	rjmp	.+116    	; 0x1074 <malloc+0x124>
    1000:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <__brkval>
    1004:	30 91 38 02 	lds	r19, 0x0238	; 0x800238 <__brkval+0x1>
    1008:	23 2b       	or	r18, r19
    100a:	41 f4       	brne	.+16     	; 0x101c <malloc+0xcc>
    100c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1010:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1014:	30 93 38 02 	sts	0x0238, r19	; 0x800238 <__brkval+0x1>
    1018:	20 93 37 02 	sts	0x0237, r18	; 0x800237 <__brkval>
    101c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1020:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1024:	21 15       	cp	r18, r1
    1026:	31 05       	cpc	r19, r1
    1028:	41 f4       	brne	.+16     	; 0x103a <malloc+0xea>
    102a:	2d b7       	in	r18, 0x3d	; 61
    102c:	3e b7       	in	r19, 0x3e	; 62
    102e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1032:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1036:	24 1b       	sub	r18, r20
    1038:	35 0b       	sbc	r19, r21
    103a:	e0 91 37 02 	lds	r30, 0x0237	; 0x800237 <__brkval>
    103e:	f0 91 38 02 	lds	r31, 0x0238	; 0x800238 <__brkval+0x1>
    1042:	e2 17       	cp	r30, r18
    1044:	f3 07       	cpc	r31, r19
    1046:	a0 f4       	brcc	.+40     	; 0x1070 <malloc+0x120>
    1048:	2e 1b       	sub	r18, r30
    104a:	3f 0b       	sbc	r19, r31
    104c:	28 17       	cp	r18, r24
    104e:	39 07       	cpc	r19, r25
    1050:	78 f0       	brcs	.+30     	; 0x1070 <malloc+0x120>
    1052:	ac 01       	movw	r20, r24
    1054:	4e 5f       	subi	r20, 0xFE	; 254
    1056:	5f 4f       	sbci	r21, 0xFF	; 255
    1058:	24 17       	cp	r18, r20
    105a:	35 07       	cpc	r19, r21
    105c:	48 f0       	brcs	.+18     	; 0x1070 <malloc+0x120>
    105e:	4e 0f       	add	r20, r30
    1060:	5f 1f       	adc	r21, r31
    1062:	50 93 38 02 	sts	0x0238, r21	; 0x800238 <__brkval+0x1>
    1066:	40 93 37 02 	sts	0x0237, r20	; 0x800237 <__brkval>
    106a:	81 93       	st	Z+, r24
    106c:	91 93       	st	Z+, r25
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <malloc+0x124>
    1070:	e0 e0       	ldi	r30, 0x00	; 0
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	cf 01       	movw	r24, r30
    1076:	df 91       	pop	r29
    1078:	cf 91       	pop	r28
    107a:	1f 91       	pop	r17
    107c:	0f 91       	pop	r16
    107e:	08 95       	ret

00001080 <free>:
    1080:	cf 93       	push	r28
    1082:	df 93       	push	r29
    1084:	00 97       	sbiw	r24, 0x00	; 0
    1086:	09 f4       	brne	.+2      	; 0x108a <free+0xa>
    1088:	81 c0       	rjmp	.+258    	; 0x118c <free+0x10c>
    108a:	fc 01       	movw	r30, r24
    108c:	32 97       	sbiw	r30, 0x02	; 2
    108e:	13 82       	std	Z+3, r1	; 0x03
    1090:	12 82       	std	Z+2, r1	; 0x02
    1092:	a0 91 39 02 	lds	r26, 0x0239	; 0x800239 <__flp>
    1096:	b0 91 3a 02 	lds	r27, 0x023A	; 0x80023a <__flp+0x1>
    109a:	10 97       	sbiw	r26, 0x00	; 0
    109c:	81 f4       	brne	.+32     	; 0x10be <free+0x3e>
    109e:	20 81       	ld	r18, Z
    10a0:	31 81       	ldd	r19, Z+1	; 0x01
    10a2:	82 0f       	add	r24, r18
    10a4:	93 1f       	adc	r25, r19
    10a6:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <__brkval>
    10aa:	30 91 38 02 	lds	r19, 0x0238	; 0x800238 <__brkval+0x1>
    10ae:	28 17       	cp	r18, r24
    10b0:	39 07       	cpc	r19, r25
    10b2:	51 f5       	brne	.+84     	; 0x1108 <free+0x88>
    10b4:	f0 93 38 02 	sts	0x0238, r31	; 0x800238 <__brkval+0x1>
    10b8:	e0 93 37 02 	sts	0x0237, r30	; 0x800237 <__brkval>
    10bc:	67 c0       	rjmp	.+206    	; 0x118c <free+0x10c>
    10be:	ed 01       	movw	r28, r26
    10c0:	20 e0       	ldi	r18, 0x00	; 0
    10c2:	30 e0       	ldi	r19, 0x00	; 0
    10c4:	ce 17       	cp	r28, r30
    10c6:	df 07       	cpc	r29, r31
    10c8:	40 f4       	brcc	.+16     	; 0x10da <free+0x5a>
    10ca:	4a 81       	ldd	r20, Y+2	; 0x02
    10cc:	5b 81       	ldd	r21, Y+3	; 0x03
    10ce:	9e 01       	movw	r18, r28
    10d0:	41 15       	cp	r20, r1
    10d2:	51 05       	cpc	r21, r1
    10d4:	f1 f0       	breq	.+60     	; 0x1112 <free+0x92>
    10d6:	ea 01       	movw	r28, r20
    10d8:	f5 cf       	rjmp	.-22     	; 0x10c4 <free+0x44>
    10da:	d3 83       	std	Z+3, r29	; 0x03
    10dc:	c2 83       	std	Z+2, r28	; 0x02
    10de:	40 81       	ld	r20, Z
    10e0:	51 81       	ldd	r21, Z+1	; 0x01
    10e2:	84 0f       	add	r24, r20
    10e4:	95 1f       	adc	r25, r21
    10e6:	c8 17       	cp	r28, r24
    10e8:	d9 07       	cpc	r29, r25
    10ea:	59 f4       	brne	.+22     	; 0x1102 <free+0x82>
    10ec:	88 81       	ld	r24, Y
    10ee:	99 81       	ldd	r25, Y+1	; 0x01
    10f0:	84 0f       	add	r24, r20
    10f2:	95 1f       	adc	r25, r21
    10f4:	02 96       	adiw	r24, 0x02	; 2
    10f6:	91 83       	std	Z+1, r25	; 0x01
    10f8:	80 83       	st	Z, r24
    10fa:	8a 81       	ldd	r24, Y+2	; 0x02
    10fc:	9b 81       	ldd	r25, Y+3	; 0x03
    10fe:	93 83       	std	Z+3, r25	; 0x03
    1100:	82 83       	std	Z+2, r24	; 0x02
    1102:	21 15       	cp	r18, r1
    1104:	31 05       	cpc	r19, r1
    1106:	29 f4       	brne	.+10     	; 0x1112 <free+0x92>
    1108:	f0 93 3a 02 	sts	0x023A, r31	; 0x80023a <__flp+0x1>
    110c:	e0 93 39 02 	sts	0x0239, r30	; 0x800239 <__flp>
    1110:	3d c0       	rjmp	.+122    	; 0x118c <free+0x10c>
    1112:	e9 01       	movw	r28, r18
    1114:	fb 83       	std	Y+3, r31	; 0x03
    1116:	ea 83       	std	Y+2, r30	; 0x02
    1118:	49 91       	ld	r20, Y+
    111a:	59 91       	ld	r21, Y+
    111c:	c4 0f       	add	r28, r20
    111e:	d5 1f       	adc	r29, r21
    1120:	ec 17       	cp	r30, r28
    1122:	fd 07       	cpc	r31, r29
    1124:	61 f4       	brne	.+24     	; 0x113e <free+0xbe>
    1126:	80 81       	ld	r24, Z
    1128:	91 81       	ldd	r25, Z+1	; 0x01
    112a:	84 0f       	add	r24, r20
    112c:	95 1f       	adc	r25, r21
    112e:	02 96       	adiw	r24, 0x02	; 2
    1130:	e9 01       	movw	r28, r18
    1132:	99 83       	std	Y+1, r25	; 0x01
    1134:	88 83       	st	Y, r24
    1136:	82 81       	ldd	r24, Z+2	; 0x02
    1138:	93 81       	ldd	r25, Z+3	; 0x03
    113a:	9b 83       	std	Y+3, r25	; 0x03
    113c:	8a 83       	std	Y+2, r24	; 0x02
    113e:	e0 e0       	ldi	r30, 0x00	; 0
    1140:	f0 e0       	ldi	r31, 0x00	; 0
    1142:	12 96       	adiw	r26, 0x02	; 2
    1144:	8d 91       	ld	r24, X+
    1146:	9c 91       	ld	r25, X
    1148:	13 97       	sbiw	r26, 0x03	; 3
    114a:	00 97       	sbiw	r24, 0x00	; 0
    114c:	19 f0       	breq	.+6      	; 0x1154 <free+0xd4>
    114e:	fd 01       	movw	r30, r26
    1150:	dc 01       	movw	r26, r24
    1152:	f7 cf       	rjmp	.-18     	; 0x1142 <free+0xc2>
    1154:	8d 91       	ld	r24, X+
    1156:	9c 91       	ld	r25, X
    1158:	11 97       	sbiw	r26, 0x01	; 1
    115a:	9d 01       	movw	r18, r26
    115c:	2e 5f       	subi	r18, 0xFE	; 254
    115e:	3f 4f       	sbci	r19, 0xFF	; 255
    1160:	82 0f       	add	r24, r18
    1162:	93 1f       	adc	r25, r19
    1164:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <__brkval>
    1168:	30 91 38 02 	lds	r19, 0x0238	; 0x800238 <__brkval+0x1>
    116c:	28 17       	cp	r18, r24
    116e:	39 07       	cpc	r19, r25
    1170:	69 f4       	brne	.+26     	; 0x118c <free+0x10c>
    1172:	30 97       	sbiw	r30, 0x00	; 0
    1174:	29 f4       	brne	.+10     	; 0x1180 <free+0x100>
    1176:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <__flp+0x1>
    117a:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <__flp>
    117e:	02 c0       	rjmp	.+4      	; 0x1184 <free+0x104>
    1180:	13 82       	std	Z+3, r1	; 0x03
    1182:	12 82       	std	Z+2, r1	; 0x02
    1184:	b0 93 38 02 	sts	0x0238, r27	; 0x800238 <__brkval+0x1>
    1188:	a0 93 37 02 	sts	0x0237, r26	; 0x800237 <__brkval>
    118c:	df 91       	pop	r29
    118e:	cf 91       	pop	r28
    1190:	08 95       	ret

00001192 <__do_global_dtors>:
    1192:	10 e0       	ldi	r17, 0x00	; 0
    1194:	c8 e4       	ldi	r28, 0x48	; 72
    1196:	d0 e0       	ldi	r29, 0x00	; 0
    1198:	04 c0       	rjmp	.+8      	; 0x11a2 <__do_global_dtors+0x10>
    119a:	fe 01       	movw	r30, r28
    119c:	0e 94 a2 07 	call	0xf44	; 0xf44 <__tablejump2__>
    11a0:	21 96       	adiw	r28, 0x01	; 1
    11a2:	ca 34       	cpi	r28, 0x4A	; 74
    11a4:	d1 07       	cpc	r29, r17
    11a6:	c9 f7       	brne	.-14     	; 0x119a <__do_global_dtors+0x8>
    11a8:	f8 94       	cli

000011aa <__stop_program>:
    11aa:	ff cf       	rjmp	.-2      	; 0x11aa <__stop_program>
