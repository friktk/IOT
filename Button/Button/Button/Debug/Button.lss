
Button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000010e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f26  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009dd  00000000  00000000  00001186  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000466  00000000  00000000  00001b63  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00001fcc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004dd  00000000  00000000  000020bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003af  00000000  00000000  00002599  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002948  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  78:	0c 94 85 00 	jmp	0x10a	; 0x10a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_ZN6ButtonC1Ev>:
	cbi(DDRD,BTN);		// set as input
	sbi(PORTD,BTN);		// set pull-up 
} //Button

// default destructor
Button::~Button()
  80:	52 98       	cbi	0x0a, 2	; 10
  82:	5a 9a       	sbi	0x0b, 2	; 11
  84:	08 95       	ret

00000086 <_ZN6Button9isPressedEv>:
/*	while((PIND & (1<<BTN))!=0){};			// wait, BTN=1
	_delay_ms(10);							// delay
	while((PIND & (1<<BTN))==0){};			// wait for release button	 
	return true;							// if BTN = 0  . . . pressed
*/
	if((PIND & (1<<BTN))==0) return true;	// pressed
  86:	89 b1       	in	r24, 0x09	; 9
  88:	82 fb       	bst	r24, 2
  8a:	88 27       	eor	r24, r24
  8c:	80 f9       	bld	r24, 0
	else return false;						// released
  8e:	91 e0       	ldi	r25, 0x01	; 1
  90:	89 27       	eor	r24, r25
  92:	08 95       	ret

00000094 <_ZN3Led3setEbbb>:
{
} //~Led

void Led::set(bool r,bool g,bool b)
{
	if(r) cbi(PORTD,R_LED); else sbi(PORTD,R_LED);
  94:	66 23       	and	r22, r22
  96:	11 f0       	breq	.+4      	; 0x9c <_ZN3Led3setEbbb+0x8>
  98:	5e 98       	cbi	0x0b, 6	; 11
  9a:	01 c0       	rjmp	.+2      	; 0x9e <_ZN3Led3setEbbb+0xa>
  9c:	5e 9a       	sbi	0x0b, 6	; 11
	if(g) cbi(PORTD,G_LED); else sbi(PORTD,G_LED);
  9e:	44 23       	and	r20, r20
  a0:	11 f0       	breq	.+4      	; 0xa6 <_ZN3Led3setEbbb+0x12>
  a2:	5b 98       	cbi	0x0b, 3	; 11
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <_ZN3Led3setEbbb+0x14>
  a6:	5b 9a       	sbi	0x0b, 3	; 11
	if(b) cbi(PORTD,B_LED); else sbi(PORTD,B_LED);
  a8:	22 23       	and	r18, r18
  aa:	11 f0       	breq	.+4      	; 0xb0 <_ZN3Led3setEbbb+0x1c>
  ac:	5d 98       	cbi	0x0b, 5	; 11
  ae:	08 95       	ret
  b0:	5d 9a       	sbi	0x0b, 5	; 11
  b2:	08 95       	ret

000000b4 <_ZN3LedC1Ev>:

// default constructor
Led::Led()
{
	/* set as outputs */
	sbi(DDRD,R_LED);
  b4:	56 9a       	sbi	0x0a, 6	; 10
	sbi(DDRD,B_LED);
  b6:	55 9a       	sbi	0x0a, 5	; 10
	sbi(DDRD,G_LED);
  b8:	53 9a       	sbi	0x0a, 3	; 10
	
	set(false,false,false);	// set all leds off
  ba:	20 e0       	ldi	r18, 0x00	; 0
  bc:	40 e0       	ldi	r20, 0x00	; 0
  be:	60 e0       	ldi	r22, 0x00	; 0
  c0:	0e 94 4a 00 	call	0x94	; 0x94 <_ZN3Led3setEbbb>
  c4:	08 95       	ret

000000c6 <main>:

#include "Led.h"
#include "Button.h"

int main(void)
{
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	00 d0       	rcall	.+0      	; 0xcc <main+0x6>
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
	Led rgb;			// create object of class Led
  d0:	ce 01       	movw	r24, r28
  d2:	01 96       	adiw	r24, 0x01	; 1
  d4:	0e 94 5a 00 	call	0xb4	; 0xb4 <_ZN3LedC1Ev>
//	Led *rgb_ptr;		// pointer to class Led
//	rgb_ptr = &rgb;		// set pointer to adress of rgb object	
	rgb.set(0,1,0);		// green led on;
  d8:	20 e0       	ldi	r18, 0x00	; 0
  da:	41 e0       	ldi	r20, 0x01	; 1
  dc:	60 e0       	ldi	r22, 0x00	; 0
  de:	ce 01       	movw	r24, r28
  e0:	01 96       	adiw	r24, 0x01	; 1
  e2:	0e 94 4a 00 	call	0x94	; 0x94 <_ZN3Led3setEbbb>

	Button btn;					// create object of class Button
  e6:	ce 01       	movw	r24, r28
  e8:	02 96       	adiw	r24, 0x02	; 2
  ea:	0e 94 40 00 	call	0x80	; 0x80 <_ZN6ButtonC1Ev>
	while(!btn.isPressed()){}	// wait until btn is pressed
  ee:	ce 01       	movw	r24, r28
  f0:	02 96       	adiw	r24, 0x02	; 2
  f2:	0e 94 43 00 	call	0x86	; 0x86 <_ZN6Button9isPressedEv>
  f6:	88 23       	and	r24, r24
  f8:	d1 f3       	breq	.-12     	; 0xee <main+0x28>
	rgb.set(0,0,0);				// turn off leds
  fa:	20 e0       	ldi	r18, 0x00	; 0
  fc:	40 e0       	ldi	r20, 0x00	; 0
  fe:	60 e0       	ldi	r22, 0x00	; 0
 100:	ce 01       	movw	r24, r28
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	0e 94 4a 00 	call	0x94	; 0x94 <_ZN3Led3setEbbb>
 108:	ff cf       	rjmp	.-2      	; 0x108 <main+0x42>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>
